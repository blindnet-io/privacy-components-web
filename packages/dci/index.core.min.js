import{localized as e}from"@lit/localize";import{LitElement as t,html as n,css as s}from"lit";import{state as o,customElement as r}from"lit/decorators.js";import{choose as a}from"lit/directives/choose.js";import{CoreConfigurationMixin as l,ComputationAPI as d}from"@blindnet/core";function i(e,t,n,s){var o,r=arguments.length,a=r<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,s);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(r<3?o(a):r>3?o(t,n,a):o(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}var c;!function(e){e[e.requests=0]="requests",e[e.alerts=1]="alerts"}(c||(c={}));let u=class extends(l(t)){constructor(){super(...arguments),this._uiState=c.requests,this._demands=[]}handleViewToggleChange(e){const{newValue:t}=e.detail;this._uiState="Alerts"===t?c.alerts:c.requests}connectedCallback(){super.connectedCallback()}willUpdate(e){e.has("adminToken")&&this.adminToken&&d.getInstance().getPendingDemands(this.adminToken).then((e=>{this._demands=e}))}render(){return n`<bldn-toggle-button left="Requests" right="Alerts" @bldn-toggle-button-change="${this.handleViewToggleChange}"></bldn-toggle-button>${a(this._uiState,[[c.requests,()=>n`<bldn-data-consum-requests demands="${JSON.stringify(this._demands)}"></bldn-data-consum-requests>`],[c.alerts,()=>n`<bldn-data-consum-alerts></bldn-data-consum-alerts>`]])}`}};u.styles=s`:host{width:100%}bldn-toggle-button{padding-bottom:4vh}`,i([o()],u.prototype,"_uiState",void 0),i([o()],u.prototype,"_demands",void 0),u=i([r("bldn-data-consum"),e()],u);export{u as DataConsumerInterface};
//# sourceMappingURL=index.core.min.js.map
