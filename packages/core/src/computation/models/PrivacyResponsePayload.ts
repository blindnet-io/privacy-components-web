/* tslint:disable */
/* eslint-disable */
/**
 * Privacy computation engine
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 *
 * @export
 * @interface PrivacyResponsePayload
 */
export interface PrivacyResponsePayload {
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  demandId: string;
  /**
   *
   * @type {Date}
   * @memberof PrivacyResponsePayload
   */
  date: Date;
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  requestedAction: PrivacyResponsePayloadRequestedActionEnum;
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  status: PrivacyResponsePayloadStatusEnum;
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  motive?: PrivacyResponsePayloadMotiveEnum;
  /**
   *
   * @type {any}
   * @memberof PrivacyResponsePayload
   */
  answer?: any | null;
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  lang?: string;
  /**
   *
   * @type {Array<any>}
   * @memberof PrivacyResponsePayload
   */
  includes?: Array<any>;
  /**
   *
   * @type {string}
   * @memberof PrivacyResponsePayload
   */
  data?: string;
}

/**
 * @export
 * @enum {string}
 */
export enum PrivacyResponsePayloadRequestedActionEnum {
  Access = 'ACCESS',
  Delete = 'DELETE',
  Modify = 'MODIFY',
  Object = 'OBJECT',
  Portability = 'PORTABILITY',
  Restrict = 'RESTRICT',
  RevokeConsent = 'REVOKE-CONSENT',
  Transparency = 'TRANSPARENCY',
  TransparencyDataCategories = 'TRANSPARENCY.DATA-CATEGORIES',
  TransparencyDpo = 'TRANSPARENCY.DPO',
  TransparencyKnown = 'TRANSPARENCY.KNOWN',
  TransparencyLegalBases = 'TRANSPARENCY.LEGAL-BASES',
  TransparencyOrganization = 'TRANSPARENCY.ORGANIZATION',
  TransparencyPolicy = 'TRANSPARENCY.POLICY',
  TransparencyProcessingCategories = 'TRANSPARENCY.PROCESSING-CATEGORIES',
  TransparencyProvenance = 'TRANSPARENCY.PROVENANCE',
  TransparencyPurpose = 'TRANSPARENCY.PURPOSE',
  TransparencyRetention = 'TRANSPARENCY.RETENTION',
  TransparencyWhere = 'TRANSPARENCY.WHERE',
  TransparencyWho = 'TRANSPARENCY.WHO',
  Other = 'OTHER',
}
/**
 * @export
 * @enum {string}
 */
export enum PrivacyResponsePayloadStatusEnum {
  Granted = 'GRANTED',
  Denied = 'DENIED',
  PartiallyGranted = 'PARTIALLY-GRANTED',
  UnderReview = 'UNDER-REVIEW',
  Canceled = 'CANCELED',
}
/**
 * @export
 * @enum {string}
 */
export enum PrivacyResponsePayloadMotiveEnum {
  IdentityUnconfirmed = 'IDENTITY-UNCONFIRMED',
  LanguageUnsupported = 'LANGUAGE-UNSUPPORTED',
  ValidReasons = 'VALID-REASONS',
  Impossible = 'IMPOSSIBLE',
  NoSuchData = 'NO-SUCH-DATA',
  RequestUnsupported = 'REQUEST-UNSUPPORTED',
  UserUnknown = 'USER-UNKNOWN',
  OtherMotive = 'OTHER-MOTIVE',
}

/**
 * Check if a given object implements the PrivacyResponsePayload interface.
 */
export function instanceOfPrivacyResponsePayload(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'demandId' in value;
  isInstance = isInstance && 'date' in value;
  isInstance = isInstance && 'requestedAction' in value;
  isInstance = isInstance && 'status' in value;

  return isInstance;
}

export function PrivacyResponsePayloadFromJSON(
  json: any
): PrivacyResponsePayload {
  return PrivacyResponsePayloadFromJSONTyped(json, false);
}

export function PrivacyResponsePayloadFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PrivacyResponsePayload {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    demandId: json['demand_id'],
    date: new Date(json['date']),
    requestedAction: json['requested_action'],
    status: json['status'],
    motive: !exists(json, 'motive') ? undefined : json['motive'],
    answer: !exists(json, 'answer') ? undefined : json['answer'],
    message: !exists(json, 'message') ? undefined : json['message'],
    lang: !exists(json, 'lang') ? undefined : json['lang'],
    includes: !exists(json, 'includes') ? undefined : json['includes'],
    data: !exists(json, 'data') ? undefined : json['data'],
  };
}

export function PrivacyResponsePayloadToJSON(
  value?: PrivacyResponsePayload | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    demand_id: value.demandId,
    date: value.date.toISOString(),
    requested_action: value.requestedAction,
    status: value.status,
    motive: value.motive,
    answer: value.answer,
    message: value.message,
    lang: value.lang,
    includes: value.includes,
    data: value.data,
  };
}
