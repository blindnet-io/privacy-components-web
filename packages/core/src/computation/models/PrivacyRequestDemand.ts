/* tslint:disable */
/* eslint-disable */
/**
 * Privacy computation engine
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Restrictions } from './Restrictions';
import {
  RestrictionsFromJSON,
  RestrictionsFromJSONTyped,
  RestrictionsToJSON,
} from './Restrictions';

/**
 *
 * @export
 * @interface PrivacyRequestDemand
 */
export interface PrivacyRequestDemand {
  /**
   *
   * @type {string}
   * @memberof PrivacyRequestDemand
   */
  id: string;
  /**
   *
   * @type {string}
   * @memberof PrivacyRequestDemand
   */
  action: PrivacyRequestDemandActionEnum;
  /**
   *
   * @type {string}
   * @memberof PrivacyRequestDemand
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof PrivacyRequestDemand
   */
  language?: string;
  /**
   *
   * @type {Array<string>}
   * @memberof PrivacyRequestDemand
   */
  data?: Array<string>;
  /**
   *
   * @type {Restrictions}
   * @memberof PrivacyRequestDemand
   */
  restrictions?: Restrictions;
}

/**
 * @export
 * @enum {string}
 */
export enum PrivacyRequestDemandActionEnum {
  Access = 'ACCESS',
  Delete = 'DELETE',
  Modify = 'MODIFY',
  Object = 'OBJECT',
  Portability = 'PORTABILITY',
  Restrict = 'RESTRICT',
  RevokeConsent = 'REVOKE-CONSENT',
  Transparency = 'TRANSPARENCY',
  TransparencyDataCategories = 'TRANSPARENCY.DATA-CATEGORIES',
  TransparencyDpo = 'TRANSPARENCY.DPO',
  TransparencyKnown = 'TRANSPARENCY.KNOWN',
  TransparencyLegalBases = 'TRANSPARENCY.LEGAL-BASES',
  TransparencyOrganization = 'TRANSPARENCY.ORGANIZATION',
  TransparencyPolicy = 'TRANSPARENCY.POLICY',
  TransparencyProcessingCategories = 'TRANSPARENCY.PROCESSING-CATEGORIES',
  TransparencyProvenance = 'TRANSPARENCY.PROVENANCE',
  TransparencyPurpose = 'TRANSPARENCY.PURPOSE',
  TransparencyRetention = 'TRANSPARENCY.RETENTION',
  TransparencyWhere = 'TRANSPARENCY.WHERE',
  TransparencyWho = 'TRANSPARENCY.WHO',
  Other = 'OTHER',
}

/**
 * Check if a given object implements the PrivacyRequestDemand interface.
 */
export function instanceOfPrivacyRequestDemand(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && 'id' in value;
  isInstance = isInstance && 'action' in value;

  return isInstance;
}

export function PrivacyRequestDemandFromJSON(json: any): PrivacyRequestDemand {
  return PrivacyRequestDemandFromJSONTyped(json, false);
}

export function PrivacyRequestDemandFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PrivacyRequestDemand {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json['id'],
    action: json['action'],
    message: !exists(json, 'message') ? undefined : json['message'],
    language: !exists(json, 'language') ? undefined : json['language'],
    data: !exists(json, 'data') ? undefined : json['data'],
    restrictions: !exists(json, 'restrictions')
      ? undefined
      : RestrictionsFromJSON(json['restrictions']),
  };
}

export function PrivacyRequestDemandToJSON(
  value?: PrivacyRequestDemand | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    action: value.action,
    message: value.message,
    language: value.language,
    data: value.data,
    restrictions: RestrictionsToJSON(value.restrictions),
  };
}
