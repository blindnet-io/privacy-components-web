/* tslint:disable */
/* eslint-disable */
/**
 * Privacy computation engine
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.5.0-SNAPSHOT
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConsentRestriction } from './ConsentRestriction';
import {
  ConsentRestrictionFromJSON,
  ConsentRestrictionFromJSONTyped,
  ConsentRestrictionToJSON,
} from './ConsentRestriction';
import type { DataReferenceRestriction } from './DataReferenceRestriction';
import {
  DataReferenceRestrictionFromJSON,
  DataReferenceRestrictionFromJSONTyped,
  DataReferenceRestrictionToJSON,
} from './DataReferenceRestriction';
import type { DateRangeRestriction } from './DateRangeRestriction';
import {
  DateRangeRestrictionFromJSON,
  DateRangeRestrictionFromJSONTyped,
  DateRangeRestrictionToJSON,
} from './DateRangeRestriction';
import type { PrivacyScopeRestriction } from './PrivacyScopeRestriction';
import {
  PrivacyScopeRestrictionFromJSON,
  PrivacyScopeRestrictionFromJSONTyped,
  PrivacyScopeRestrictionToJSON,
} from './PrivacyScopeRestriction';
import type { ProvenanceRestriction } from './ProvenanceRestriction';
import {
  ProvenanceRestrictionFromJSON,
  ProvenanceRestrictionFromJSONTyped,
  ProvenanceRestrictionToJSON,
} from './ProvenanceRestriction';

/**
 *
 * @export
 * @interface Restrictions
 */
export interface Restrictions {
  /**
   *
   * @type {Array<PrivacyScopeRestriction>}
   * @memberof Restrictions
   */
  privacyScope?: Array<PrivacyScopeRestriction>;
  /**
   *
   * @type {ConsentRestriction}
   * @memberof Restrictions
   */
  consent?: ConsentRestriction;
  /**
   *
   * @type {DateRangeRestriction}
   * @memberof Restrictions
   */
  dateRange?: DateRangeRestriction;
  /**
   *
   * @type {ProvenanceRestriction}
   * @memberof Restrictions
   */
  provenance?: ProvenanceRestriction;
  /**
   *
   * @type {DataReferenceRestriction}
   * @memberof Restrictions
   */
  dataReference?: DataReferenceRestriction;
}

/**
 * Check if a given object implements the Restrictions interface.
 */
export function instanceOfRestrictions(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function RestrictionsFromJSON(json: any): Restrictions {
  return RestrictionsFromJSONTyped(json, false);
}

export function RestrictionsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Restrictions {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    privacyScope: !exists(json, 'privacy_scope')
      ? undefined
      : (json['privacy_scope'] as Array<any>).map(
          PrivacyScopeRestrictionFromJSON
        ),
    consent: !exists(json, 'consent')
      ? undefined
      : ConsentRestrictionFromJSON(json['consent']),
    dateRange: !exists(json, 'date_range')
      ? undefined
      : DateRangeRestrictionFromJSON(json['date_range']),
    provenance: !exists(json, 'provenance')
      ? undefined
      : ProvenanceRestrictionFromJSON(json['provenance']),
    dataReference: !exists(json, 'data_reference')
      ? undefined
      : DataReferenceRestrictionFromJSON(json['data_reference']),
  };
}

export function RestrictionsToJSON(value?: Restrictions | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    privacy_scope:
      value.privacyScope === undefined
        ? undefined
        : (value.privacyScope as Array<any>).map(PrivacyScopeRestrictionToJSON),
    consent: ConsentRestrictionToJSON(value.consent),
    date_range: DateRangeRestrictionToJSON(value.dateRange),
    provenance: ProvenanceRestrictionToJSON(value.provenance),
    data_reference: DataReferenceRestrictionToJSON(value.dataReference),
  };
}
