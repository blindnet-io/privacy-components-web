{"version":3,"file":"UserEventsService.js","sources":["../../../../src/models/generated-models/services/UserEventsService.ts"],"sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { EndContractPayload } from '../models/EndContractPayload.js';\nimport type { EndLegitimateInterestPayload } from '../models/EndLegitimateInterestPayload.js';\nimport type { GiveConsentPayload } from '../models/GiveConsentPayload.js';\nimport type { StartContractPayload } from '../models/StartContractPayload.js';\nimport type { StartLegitimateInterestPayload } from '../models/StartLegitimateInterestPayload.js';\n\nimport type { CancelablePromise } from '../core/CancelablePromise.js';\nimport { OpenAPI } from '../core/OpenAPI.js';\nimport { request as __request } from '../core/request.js';\n\nexport class UserEventsService {\n  /**\n   * Add consent for a user\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static postV0UserEventsConsent(\n    requestBody: GiveConsentPayload\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/v0/user-events/consent',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Start service contract for a user\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static postV0UserEventsContractStart(\n    requestBody: StartContractPayload\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/v0/user-events/contract/start',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * End service contract for a user\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static postV0UserEventsContractEnd(\n    requestBody: EndContractPayload\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/v0/user-events/contract/end',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Start legitimate interest for a user\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static postV0UserEventsLegitimateInterestStart(\n    requestBody: StartLegitimateInterestPayload\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/v0/user-events/legitimate-interest/start',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * End legitimate interest for a user\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static postV0UserEventsLegitimateInterestEnd(\n    requestBody: EndLegitimateInterestPayload\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/v0/user-events/legitimate-interest/end',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n}\n"],"names":["__request"],"mappings":";;;MAaa,iBAAiB,CAAA;AAC5B;;;;;AAKG;IACI,OAAO,uBAAuB,CACnC,WAA+B,EAAA;QAE/B,OAAOA,OAAS,CAAC,OAAO,EAAE;AACxB,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,GAAG,EAAE,yBAAyB;AAC9B,YAAA,IAAI,EAAE,WAAW;AACjB,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,MAAM,EAAE;AACN,gBAAA,GAAG,EAAE,CAAyB,uBAAA,CAAA;AAC/B,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,OAAO,6BAA6B,CACzC,WAAiC,EAAA;QAEjC,OAAOA,OAAS,CAAC,OAAO,EAAE;AACxB,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,GAAG,EAAE,gCAAgC;AACrC,YAAA,IAAI,EAAE,WAAW;AACjB,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,MAAM,EAAE;AACN,gBAAA,GAAG,EAAE,CAAyB,uBAAA,CAAA;AAC/B,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,OAAO,2BAA2B,CACvC,WAA+B,EAAA;QAE/B,OAAOA,OAAS,CAAC,OAAO,EAAE;AACxB,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,GAAG,EAAE,8BAA8B;AACnC,YAAA,IAAI,EAAE,WAAW;AACjB,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,MAAM,EAAE;AACN,gBAAA,GAAG,EAAE,CAAyB,uBAAA,CAAA;AAC/B,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,OAAO,uCAAuC,CACnD,WAA2C,EAAA;QAE3C,OAAOA,OAAS,CAAC,OAAO,EAAE;AACxB,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,GAAG,EAAE,2CAA2C;AAChD,YAAA,IAAI,EAAE,WAAW;AACjB,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,MAAM,EAAE;AACN,gBAAA,GAAG,EAAE,CAAyB,uBAAA,CAAA;AAC/B,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AAED;;;;;AAKG;IACI,OAAO,qCAAqC,CACjD,WAAyC,EAAA;QAEzC,OAAOA,OAAS,CAAC,OAAO,EAAE;AACxB,YAAA,MAAM,EAAE,MAAM;AACd,YAAA,GAAG,EAAE,yCAAyC;AAC9C,YAAA,IAAI,EAAE,WAAW;AACjB,YAAA,SAAS,EAAE,kBAAkB;AAC7B,YAAA,MAAM,EAAE;AACN,gBAAA,GAAG,EAAE,CAAyB,uBAAA,CAAA;AAC/B,aAAA;AACF,SAAA,CAAC,CAAC;KACJ;AACF;;;;"}