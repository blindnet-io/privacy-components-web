{"version":3,"file":"computation-api.js","sources":["../../src/computation/computation-api.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable camelcase */\nimport {\n  ApproveDemandPayload,\n  CreatePrivacyRequestPayload,\n  DataCategoryResponsePayload,\n  DenyDemandPayload,\n  GivenConsentsPayload,\n  PendingDemandDetailsPayload,\n  PendingDemandPayload,\n  PrivacyResponsePayload,\n  RequestHistoryPayload,\n} from './generated-models/index.js';\nimport { DATA_CATEGORY } from './models/priv-terms.js';\n\nexport class ComputationAPI {\n  private static instance: ComputationAPI | null = null;\n\n  static readonly MOCK_URL =\n    'https://stoplight.io/mocks/blindnet/product-management:open-api/74767654';\n\n  static readonly DEFAULT_URL =\n    'https://devkit-pce-staging.azurewebsites.net/v0';\n\n  /**\n   * @param baseURL base URL (schema + host + port + base-path) to call\n   */\n  private constructor(\n    baseURL?: string,\n    apiToken?: string,\n    adminToken?: string\n  ) {\n    if (!baseURL) {\n      this._baseURL = ComputationAPI.DEFAULT_URL;\n    } else if (baseURL === 'false') {\n      this._baseURL = ComputationAPI.MOCK_URL;\n    } else {\n      this._baseURL = baseURL;\n    }\n    // make sure the base URL never has a trailing slash\n    this._baseURL = this._baseURL.replace(/\\/+$/, '');\n\n    if (!apiToken) {\n      this._apiToken = '';\n    } else {\n      this._apiToken = apiToken;\n    }\n\n    if (!adminToken) {\n      // eslint-disable-next-line no-console\n      this._adminToken = '';\n    } else {\n      this._adminToken = adminToken;\n    }\n  }\n\n  get isMocked(): boolean {\n    return this._baseURL === ComputationAPI.MOCK_URL;\n  }\n\n  private fullURL(endpoint: string) {\n    // endpoint should always have one leading slash\n    return `${this._baseURL}${endpoint.replace(/^\\/*/, '/')}`;\n  }\n\n  /**\n   * base URL (schema + host + port + base-path) for all calls\n   */\n  private _baseURL: string;\n\n  get baseURL(): string {\n    return this._baseURL;\n  }\n\n  private _apiToken: string;\n\n  public setToken(apiToken: string) {\n    this._apiToken = apiToken;\n  }\n\n  public apiTokenSet() {\n    return this._apiToken !== '';\n  }\n\n  private _adminToken: string;\n\n  public setAdminToken(adminToken: string) {\n    this._adminToken = adminToken;\n  }\n\n  public adminTokenSet() {\n    return this._adminToken !== '';\n  }\n\n  /**\n   *\n   * @param baseURL base URL (schema + host + port + base-path) to call (for default behavior, see mock)\n   * @param force override any preexisting configuration if it exists\n   *\n   */\n  public static configure(\n    baseURL?: string,\n    apiToken?: string,\n    adminToken?: string,\n    force = false\n  ): boolean {\n    if (ComputationAPI.instance && !force) {\n      if (\n        baseURL !== ComputationAPI.getInstance().baseURL &&\n        baseURL &&\n        baseURL !== 'false'\n      ) {\n        /* eslint-disable no-console */\n        console.log('[Computation API] Configuration conflict');\n        console.log(\n          `[Computation API] configured value: ${\n            ComputationAPI.getInstance().baseURL\n          }`\n        );\n        console.log(`[Computation API] conflicting value: ${baseURL}`);\n        /* eslint-enable no-console */\n      }\n\n      return false;\n    }\n    ComputationAPI.instance = new ComputationAPI(baseURL, apiToken, adminToken);\n    return true;\n  }\n\n  public static getInstance(): ComputationAPI {\n    if (!ComputationAPI.instance) {\n      throw new Error(\n        '[Computation API] trying to use the API before configuring it'\n      );\n    }\n\n    return ComputationAPI.instance;\n  }\n\n  private headers(\n    acceptJSON = false,\n    requireAuth = true,\n    request?: CreatePrivacyRequestPayload\n  ): Headers {\n    const headers = new Headers({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*',\n      ...(this.isMocked && request\n        ? { Prefer: this.getMockHeader(request) }\n        : {}),\n      ...(acceptJSON ? { accept: 'application/json' } : {}),\n    });\n\n    // Append auth header if required and api token is defined\n    if (requireAuth && !this._apiToken) {\n      throw new Error('You must include a valid Authorization header!');\n    } else if (this._apiToken) {\n      headers.append('Authorization', `Bearer ${this._apiToken}`);\n    }\n\n    return headers;\n  }\n\n  /**\n   * Determine the correct mock header for a PrivacyRequest\n   * @param request PrivacyRequest to get mock header for\n   * @returns String to be used in the \"prefer\" header\n   */\n  private getMockHeader(request: CreatePrivacyRequestPayload): string {\n    // If more than 1 demand, send the default multi demand response\n    if (request.demands && request.demands.length > 1) {\n      return 'code=200, example=TRANSPARENCY Multi-Response';\n    }\n\n    // Select the mock response corresponding to this action\n    if (request.demands && request.demands.length === 1) {\n      const { action } = request.demands[0];\n      return `code=200, example=${action} Response`;\n    }\n\n    // If no demands get bad request response\n    return 'code=400';\n  }\n\n  // Configuration endpoints\n\n  async getDataCategories(): Promise<DataCategoryResponsePayload[]> {\n    const endpoint = `/configure/data-categories`;\n\n    const response = await fetch(this.fullURL(endpoint), {\n      method: 'GET',\n      headers: this.headers(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  }\n\n  // Privacy Request Endpoints\n\n  private preProcessRequest(\n    request: CreatePrivacyRequestPayload\n  ): CreatePrivacyRequestPayload {\n    // If all privacy scopes provided, this is the same as no restriction\n    const allDataCategories = Object.values(DATA_CATEGORY).filter(\n      dc => dc !== DATA_CATEGORY.ALL && !dc.includes('.')\n    );\n    request.demands!.forEach(d => {\n      if (d.restrictions && d.restrictions.privacy_scope) {\n        const demandDcs = d.restrictions.privacy_scope!.map(psr => psr.dc);\n        if (allDataCategories.every(dc => demandDcs.includes(dc))) {\n          const demand = d;\n          delete demand.restrictions!.privacy_scope;\n        }\n      }\n    });\n\n    return request;\n  }\n\n  /**\n   * Send a PrivacyRequest to the privacy-request API\n   * @param {CreatePrivacyRequestPayload} request Request body to send\n   * @returns\n   */\n  async sendPrivacyRequest(\n    request: CreatePrivacyRequestPayload\n  ): Promise<{ request_id: string }> {\n    const endpoint = `/privacy-request`;\n\n    const preparedRequest = this.preProcessRequest(request);\n\n    // Only allow no auth header for certain requests\n    const authRequired = request.demands!.every(demand =>\n      demand.action.includes('TRANSPARENCY')\n    );\n\n    const response = await fetch(this.fullURL(endpoint), {\n      method: 'POST',\n      headers: this.headers(true, authRequired, request),\n      body: JSON.stringify(preparedRequest),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  }\n\n  async getRequestHistory(): Promise<RequestHistoryPayload> {\n    const endpoint = '/privacy-request/history';\n\n    const response = await fetch(this.fullURL(endpoint), {\n      method: 'GET',\n      headers: this.headers(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  }\n\n  async getRequest(requestId: string): Promise<PrivacyResponsePayload[]> {\n    const endpoint = `/privacy-request/${requestId}`;\n\n    const response = await fetch(this.fullURL(endpoint), {\n      method: 'GET',\n      headers: this.headers(true),\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  }\n\n  async cancelDemand(demand_id: string): Promise<void> {\n    const endpoint = '/privacy-request/cancel';\n\n    const headers = this.headers(true);\n    const body = JSON.stringify({ demand_id });\n\n    const response = await fetch(this.fullURL(endpoint), {\n      method: 'POST',\n      headers,\n      body,\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n  }\n\n  // Data consumer endpoints\n\n  /**\n   * Gets a list of all demands which are pending a response\n   * @returns {PendingDemandPayload[]}\n   */\n  async getPendingDemands(newAdminToken?: string) {\n    // Update the admin token if one was passed\n    if (typeof newAdminToken !== 'undefined') {\n      this.setAdminToken(newAdminToken);\n    } else if (!this._adminToken) {\n      throw new Error('You must set an admin token before making API calls!');\n    }\n\n    return fetch(\n      `https://devkit-pce-staging.azurewebsites.net/v0/consumer-interface/pending-requests`,\n      {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${this._adminToken}`,\n        },\n      }\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json() as Promise<PendingDemandPayload[]>;\n    });\n  }\n\n  /**\n   * Get the info and recomendation for a specific demand\n   * @param {string} id uuid of the demand\n   * @returns {PendingDemandDetailsPayload}\n   */\n  async getPendingDemandDetails(id: string, newAdminToken?: string) {\n    // Update the admin token if one was passed\n    if (typeof newAdminToken !== 'undefined') {\n      this.setAdminToken(newAdminToken);\n    } else if (!this._adminToken) {\n      throw new Error('You must set an admin token before making API calls!');\n    }\n\n    return fetch(\n      `https://devkit-pce-staging.azurewebsites.net/v0/consumer-interface/pending-requests/${id}`,\n      {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${this._adminToken}`,\n        },\n      }\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json() as Promise<PendingDemandDetailsPayload>;\n    });\n  }\n\n  /**\n   * Approve a demand\n   * @param id uuid of the demand to approve\n   * @param msg optional message explaining the approval\n   * @param lang language of the message\n   * @returns\n   */\n  async grantDemand(\n    id: string,\n    msg?: string,\n    lang?: string,\n    newAdminToken?: string\n  ) {\n    // Update the admin token if one was passed\n    if (typeof newAdminToken !== 'undefined') {\n      this.setAdminToken(newAdminToken);\n    } else if (!this._adminToken) {\n      throw new Error('You must set an admin token before making API calls!');\n    }\n\n    if (id === undefined) {\n      throw TypeError('You must pass an ID of the demand to deny.');\n    }\n\n    if (!msg) {\n      msg = undefined;\n    }\n\n    const payload: ApproveDemandPayload = { id, msg, lang };\n\n    return fetch(\n      `https://devkit-pce-staging.azurewebsites.net/v0/consumer-interface/pending-requests/approve`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this._adminToken}`,\n        },\n        body: JSON.stringify(payload),\n      }\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n    });\n  }\n\n  /**\n   * Deny a demand\n   * @param id uuid of the demand to deny\n   * @param msg optional message explaining the denial\n   * @param motive motive for the denial. for the DCI, we are in the situation where demands\n   * are being manually processed, so we assume the motive will be explained in msg and default to\n   * 'OTHER-MOTIVE'.\n   * @param lang language of the message\n   * @returns\n   */\n  async denyDemand(\n    id: string,\n    motive: DenyDemandPayload.motive = DenyDemandPayload.motive.OTHER_MOTIVE,\n    msg?: string,\n    lang?: string,\n    newAdminToken?: string\n  ) {\n    // Update the admin token if one was passed\n    if (typeof newAdminToken !== 'undefined') {\n      this.setAdminToken(newAdminToken);\n    } else if (!this._adminToken) {\n      throw new Error('You must set an admin token before making API calls!');\n    }\n\n    if (id === undefined) {\n      throw TypeError('You must pass an ID of the demand to deny.');\n    }\n\n    const payload: DenyDemandPayload = { id, motive, msg, lang };\n\n    return fetch(\n      `https://devkit-pce-staging.azurewebsites.net/v0/consumer-interface/pending-requests/deny`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${this._adminToken}`,\n        },\n        body: JSON.stringify(payload),\n      }\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n    });\n  }\n\n  // User info endpoints\n\n  /**\n   * Get consents given by the user authenticated by the current token\n   */\n  async getUserConsents(): Promise<GivenConsentsPayload[]> {\n    return fetch(\n      `https://devkit-pce-staging.azurewebsites.net/v0/user/consents`,\n      {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${this._apiToken}`,\n        },\n      }\n    ).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json() as Promise<GivenConsentsPayload[]>;\n    });\n  }\n\n  static clean() {\n    ComputationAPI.instance = null;\n  }\n}\n"],"names":[],"mappings":"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"}