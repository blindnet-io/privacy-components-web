{"version":3,"file":"ConfigurationService.js","sources":["../../../../src/computation/generated-models/services/ConfigurationService.ts"],"sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { AddRegulationsPayload } from '../models/AddRegulationsPayload.js';\nimport type { CreateLegalBasePayload } from '../models/CreateLegalBasePayload.js';\nimport type { CreateProvenancePayload } from '../models/CreateProvenancePayload.js';\nimport type { CreateRetentionPolicyPayload } from '../models/CreateRetentionPolicyPayload.js';\nimport type { CreateSelectorPayload } from '../models/CreateSelectorPayload.js';\nimport type { DataCategoryResponsePayload } from '../models/DataCategoryResponsePayload.js';\nimport type { DemandResolutionStrategy } from '../models/DemandResolutionStrategy.js';\nimport type { GeneralInformation } from '../models/GeneralInformation.js';\nimport type { LegalBase } from '../models/LegalBase.js';\nimport type { PrivacyScopeDimensionsPayload } from '../models/PrivacyScopeDimensionsPayload.js';\nimport type { RegulationResponsePayload } from '../models/RegulationResponsePayload.js';\n\nimport type { CancelablePromise } from '../core/CancelablePromise.js';\nimport { OpenAPI } from '../core/OpenAPI.js';\nimport { request as __request } from '../core/request.js';\n\nexport class ConfigurationService {\n  /**\n   * Get general information about the app\n   * @returns GeneralInformation\n   * @throws ApiError\n   */\n  public static getV0ConfigureGeneralInfo(): CancelablePromise<GeneralInformation> {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/general-info',\n    });\n  }\n\n  /**\n   * Update general information about the app\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static putV0ConfigureGeneralInfo(\n    requestBody: GeneralInformation\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/general-info',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Get data categories, processing categories and purposes\n   * @returns PrivacyScopeDimensionsPayload\n   * @throws ApiError\n   */\n  public static getV0ConfigurePrivacyScopeDimensions(): CancelablePromise<PrivacyScopeDimensionsPayload> {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/privacy-scope-dimensions',\n    });\n  }\n\n  /**\n   * Add selectors\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static putV0ConfigureSelectors(\n    requestBody?: Array<CreateSelectorPayload>\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/selectors',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Get the list of legal bases\n   * @returns LegalBase\n   * @throws ApiError\n   */\n  public static getV0ConfigureLegalBases(): CancelablePromise<\n    Array<LegalBase>\n  > {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/legal-bases',\n    });\n  }\n\n  /**\n   * Create new legal bases\n   * @param requestBody\n   * @returns string\n   * @throws ApiError\n   */\n  public static putV0ConfigureLegalBases(\n    requestBody: CreateLegalBasePayload\n  ): CancelablePromise<string> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/legal-bases',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Get a legal bases\n   * @param legalBaseId\n   * @returns LegalBase\n   * @throws ApiError\n   */\n  public static getV0ConfigureLegalBasesLegalbaseid(\n    legalBaseId: string\n  ): CancelablePromise<LegalBase> {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/legal-bases/{legalBaseId}',\n      path: {\n        legalBaseId: legalBaseId,\n      },\n      errors: {\n        400: `Invalid value for: path parameter legalBaseId`,\n      },\n    });\n  }\n\n  /**\n   * Create retention policies for data categories\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static putV0ConfigureRetentionPolicies(\n    requestBody?: Array<CreateRetentionPolicyPayload>\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/retention-policies',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Delete retention policy\n   * @param retentionPolicyId\n   * @returns any\n   * @throws ApiError\n   */\n  public static deleteV0ConfigureRetentionPoliciesRetentionpolicyid(\n    retentionPolicyId: string\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'DELETE',\n      url: '/v0/configure/retention-policies/{retentionPolicyId}',\n      path: {\n        retentionPolicyId: retentionPolicyId,\n      },\n      errors: {\n        400: `Invalid value for: path parameter retentionPolicyId`,\n      },\n    });\n  }\n\n  /**\n   * Create provenances for data categories\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static putV0ConfigureProvenances(\n    requestBody?: Array<CreateProvenancePayload>\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/provenances',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Delete provenance\n   * @param provenanceId\n   * @returns any\n   * @throws ApiError\n   */\n  public static deleteV0ConfigureProvenancesProvenanceid(\n    provenanceId: string\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'DELETE',\n      url: '/v0/configure/provenances/{provenanceId}',\n      path: {\n        provenanceId: provenanceId,\n      },\n      errors: {\n        400: `Invalid value for: path parameter provenanceId`,\n      },\n    });\n  }\n\n  /**\n   * Get data categories with retention policies and provenances\n   * @returns DataCategoryResponsePayload\n   * @throws ApiError\n   */\n  public static getV0ConfigureDataCategories(): CancelablePromise<\n    Array<DataCategoryResponsePayload>\n  > {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/data-categories',\n    });\n  }\n\n  /**\n   * Get all regulations\n   * @returns RegulationResponsePayload\n   * @throws ApiError\n   */\n  public static getV0ConfigureRegulations(): CancelablePromise<\n    Array<RegulationResponsePayload>\n  > {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/regulations',\n    });\n  }\n\n  /**\n   * Assign regulation to an app\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static putV0ConfigureRegulations(\n    requestBody: AddRegulationsPayload\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/regulations',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n\n  /**\n   * Get regulations applied to the users of the app\n   * @returns RegulationResponsePayload\n   * @throws ApiError\n   */\n  public static getV0ConfigureRegulationsApp(): CancelablePromise<\n    Array<RegulationResponsePayload>\n  > {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/regulations/app',\n    });\n  }\n\n  /**\n   * Delete regulation assigned to an app\n   * @param regulationId\n   * @returns any\n   * @throws ApiError\n   */\n  public static deleteV0ConfigureRegulationsRegulationid(\n    regulationId: string\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'DELETE',\n      url: '/v0/configure/regulations/{regulationId}',\n      path: {\n        regulationId: regulationId,\n      },\n      errors: {\n        400: `Invalid value for: path parameter regulationId`,\n      },\n    });\n  }\n\n  /**\n   * Get information about demand resolution strategies\n   * @returns DemandResolutionStrategy\n   * @throws ApiError\n   */\n  public static getV0ConfigureDemandResolutionStrategy(): CancelablePromise<DemandResolutionStrategy> {\n    return __request(OpenAPI, {\n      method: 'GET',\n      url: '/v0/configure/demand-resolution-strategy',\n    });\n  }\n\n  /**\n   * Update demand resolution strategies\n   * @param requestBody\n   * @returns any\n   * @throws ApiError\n   */\n  public static putV0ConfigureDemandResolutionStrategy(\n    requestBody: DemandResolutionStrategy\n  ): CancelablePromise<any> {\n    return __request(OpenAPI, {\n      method: 'PUT',\n      url: '/v0/configure/demand-resolution-strategy',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Invalid value for: body`,\n      },\n    });\n  }\n}\n"],"names":["__request"],"mappings":"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"}