{"version":3,"file":"request.js","sources":["../../../../src/computation/generated-models/core/request.ts"],"sourcesContent":["/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError.js';\nimport type { ApiRequestOptions } from './ApiRequestOptions.js';\nimport type { ApiResult } from './ApiResult.js';\nimport { CancelablePromise } from './CancelablePromise.js';\nimport type { OnCancel } from './CancelablePromise.js';\nimport type { OpenAPIConfig } from './OpenAPI.js';\n\nconst isDefined = <T>(\n  value: T | null | undefined\n): value is Exclude<T, null | undefined> => {\n  return value !== undefined && value !== null;\n};\n\nconst isString = (value: any): value is string => {\n  return typeof value === 'string';\n};\n\nconst isStringWithValue = (value: any): value is string => {\n  return isString(value) && value !== '';\n};\n\nconst isBlob = (value: any): value is Blob => {\n  return (\n    typeof value === 'object' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.constructor === 'function' &&\n    typeof value.constructor.name === 'string' &&\n    /^(Blob|File)$/.test(value.constructor.name) &&\n    /^(Blob|File)$/.test(value[Symbol.toStringTag])\n  );\n};\n\nconst isFormData = (value: any): value is FormData => {\n  return value instanceof FormData;\n};\n\nconst base64 = (str: string): string => {\n  try {\n    return btoa(str);\n  } catch (err) {\n    // @ts-ignore\n    return Buffer.from(str).toString('base64');\n  }\n};\n\nconst getQueryString = (params: Record<string, any>): string => {\n  const qs: string[] = [];\n\n  const append = (key: string, value: any) => {\n    qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n  };\n\n  const process = (key: string, value: any) => {\n    if (isDefined(value)) {\n      if (Array.isArray(value)) {\n        value.forEach(v => {\n          process(key, v);\n        });\n      } else if (typeof value === 'object') {\n        Object.entries(value).forEach(([k, v]) => {\n          process(`${key}[${k}]`, v);\n        });\n      } else {\n        append(key, value);\n      }\n    }\n  };\n\n  Object.entries(params).forEach(([key, value]) => {\n    process(key, value);\n  });\n\n  if (qs.length > 0) {\n    return `?${qs.join('&')}`;\n  }\n\n  return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n  const encoder = config.ENCODE_PATH || encodeURI;\n\n  const path = options.url\n    .replace('{api-version}', config.VERSION)\n    .replace(/{(.*?)}/g, (substring: string, group: string) => {\n      if (options.path?.hasOwnProperty(group)) {\n        return encoder(String(options.path[group]));\n      }\n      return substring;\n    });\n\n  const url = `${config.BASE}${path}`;\n  if (options.query) {\n    return `${url}${getQueryString(options.query)}`;\n  }\n  return url;\n};\n\nconst getFormData = (options: ApiRequestOptions): FormData | undefined => {\n  if (options.formData) {\n    const formData = new FormData();\n\n    const process = (key: string, value: any) => {\n      if (isString(value) || isBlob(value)) {\n        formData.append(key, value);\n      } else {\n        formData.append(key, JSON.stringify(value));\n      }\n    };\n\n    Object.entries(options.formData)\n      .filter(([_, value]) => isDefined(value))\n      .forEach(([key, value]) => {\n        if (Array.isArray(value)) {\n          value.forEach(v => process(key, v));\n        } else {\n          process(key, value);\n        }\n      });\n\n    return formData;\n  }\n  return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nconst resolve = async <T>(\n  options: ApiRequestOptions,\n  resolver?: T | Resolver<T>\n): Promise<T | undefined> => {\n  if (typeof resolver === 'function') {\n    return (resolver as Resolver<T>)(options);\n  }\n  return resolver;\n};\n\nconst getHeaders = async (\n  config: OpenAPIConfig,\n  options: ApiRequestOptions\n): Promise<Headers> => {\n  const token = await resolve(options, config.TOKEN);\n  const username = await resolve(options, config.USERNAME);\n  const password = await resolve(options, config.PASSWORD);\n  const additionalHeaders = await resolve(options, config.HEADERS);\n\n  const headers = Object.entries({\n    Accept: 'application/json',\n    ...additionalHeaders,\n    ...options.headers,\n  })\n    .filter(([_, value]) => isDefined(value))\n    .reduce(\n      (headers, [key, value]) => ({\n        ...headers,\n        [key]: String(value),\n      }),\n      {} as Record<string, string>\n    );\n\n  if (isStringWithValue(token)) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  if (isStringWithValue(username) && isStringWithValue(password)) {\n    const credentials = base64(`${username}:${password}`);\n    headers['Authorization'] = `Basic ${credentials}`;\n  }\n\n  if (options.body) {\n    if (options.mediaType) {\n      headers['Content-Type'] = options.mediaType;\n    } else if (isBlob(options.body)) {\n      headers['Content-Type'] = options.body.type || 'application/octet-stream';\n    } else if (isString(options.body)) {\n      headers['Content-Type'] = 'text/plain';\n    } else if (!isFormData(options.body)) {\n      headers['Content-Type'] = 'application/json';\n    }\n  }\n\n  return new Headers(headers);\n};\n\nconst getRequestBody = (options: ApiRequestOptions): any => {\n  if (options.body) {\n    if (options.mediaType?.includes('/json')) {\n      return JSON.stringify(options.body);\n    } else if (\n      isString(options.body) ||\n      isBlob(options.body) ||\n      isFormData(options.body)\n    ) {\n      return options.body;\n    } else {\n      return JSON.stringify(options.body);\n    }\n  }\n  return undefined;\n};\n\nexport const sendRequest = async (\n  config: OpenAPIConfig,\n  options: ApiRequestOptions,\n  url: string,\n  body: any,\n  formData: FormData | undefined,\n  headers: Headers,\n  onCancel: OnCancel\n): Promise<Response> => {\n  const controller = new AbortController();\n\n  const request: RequestInit = {\n    headers,\n    body: body ?? formData,\n    method: options.method,\n    signal: controller.signal,\n  };\n\n  if (config.WITH_CREDENTIALS) {\n    request.credentials = config.CREDENTIALS;\n  }\n\n  onCancel(() => controller.abort());\n\n  return await fetch(url, request);\n};\n\nconst getResponseHeader = (\n  response: Response,\n  responseHeader?: string\n): string | undefined => {\n  if (responseHeader) {\n    const content = response.headers.get(responseHeader);\n    if (isString(content)) {\n      return content;\n    }\n  }\n  return undefined;\n};\n\nconst getResponseBody = async (response: Response): Promise<any> => {\n  if (response.status !== 204) {\n    try {\n      const contentType = response.headers.get('Content-Type');\n      if (contentType) {\n        const isJSON = contentType.toLowerCase().startsWith('application/json');\n        if (isJSON) {\n          return await response.json();\n        } else {\n          return await response.text();\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return undefined;\n};\n\nconst catchErrorCodes = (\n  options: ApiRequestOptions,\n  result: ApiResult\n): void => {\n  const errors: Record<number, string> = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    403: 'Forbidden',\n    404: 'Not Found',\n    500: 'Internal Server Error',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    ...options.errors,\n  };\n\n  const error = errors[result.status];\n  if (error) {\n    throw new ApiError(options, result, error);\n  }\n\n  if (!result.ok) {\n    throw new ApiError(options, result, 'Generic Error');\n  }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(\n  config: OpenAPIConfig,\n  options: ApiRequestOptions\n): CancelablePromise<T> => {\n  return new CancelablePromise(async (resolve, reject, onCancel) => {\n    try {\n      const url = getUrl(config, options);\n      const formData = getFormData(options);\n      const body = getRequestBody(options);\n      const headers = await getHeaders(config, options);\n\n      if (!onCancel.isCancelled) {\n        const response = await sendRequest(\n          config,\n          options,\n          url,\n          body,\n          formData,\n          headers,\n          onCancel\n        );\n        const responseBody = await getResponseBody(response);\n        const responseHeader = getResponseHeader(\n          response,\n          options.responseHeader\n        );\n\n        const result: ApiResult = {\n          url,\n          ok: response.ok,\n          status: response.status,\n          statusText: response.statusText,\n          body: responseHeader ?? responseBody,\n        };\n\n        catchErrorCodes(options, result);\n\n        resolve(result.body);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n"],"names":[],"mappings":"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"}