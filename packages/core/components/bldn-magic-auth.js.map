{"version":3,"file":"bldn-magic-auth.js","sources":["../../src/components/bldn-magic-auth.ts"],"sourcesContent":["import { msg } from '@lit/localize';\nimport { css, html, LitElement, PropertyValueMap } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\n\nimport { Magic, MagicUserMetadata } from 'magic-sdk';\n\nconst bldnLogoSvg = new URL('./../assets/icons/bldn-logo.svg', import.meta.url)\n  .href;\n\n@customElement('bldn-magic-auth')\nexport class BldnMagicAuth extends LitElement {\n  /**\n   * @prop {string} magicPubKey Publishable api key for a magic auth application\n   * See https://magic.link/auth for details\n   * @example pk_live_2BDA1CB7D23A6XF9\n   */\n  @property({ type: String, attribute: 'magic-pub-key' }) magicPubKey:\n    | undefined\n    | string;\n\n  /**\n   * @prop {string} prompt Text to display above the email input\n   * @example Welcome to MyApplication!\n   */\n  @property({ type: String, attribute: 'prompt' }) prompt: string = '';\n\n  /**\n   * @prop {undefined | string} redirectURI URI to redirect to after a successful auth flow\n   * @example http://localhost:8000/myAppPage\n   */\n  @property({ type: String, attribute: 'redirect-uri' }) redirectUri:\n    | undefined\n    | string;\n\n  @state() private _magic: undefined | Magic;\n\n  @state() private _isLoggedIn: boolean = false;\n\n  @state() private _loggedInUser: undefined | MagicUserMetadata;\n\n  @state() private _email: string = '';\n\n  @state() private _requireEmail: boolean = false;\n\n  handleSubmit() {\n    if (this._email) {\n      this._magic!.auth.loginWithMagicLink({\n        email: this._email,\n        redirectURI: this.redirectUri,\n      })\n        // eslint-disable-next-line no-console\n        .catch((e: Error) => console.log(e));\n    } else {\n      this._requireEmail = true;\n    }\n  }\n\n  handleLogout() {\n    this._magic!.user.logout().then(() => {\n      this._isLoggedIn = false;\n    });\n  }\n\n  handleMagicPubKeyChange() {\n    if (this.magicPubKey) {\n      this._magic = new Magic(this.magicPubKey); // Get a new Magic instant if publishable key changes\n      // Check if a user is logged in\n      this._magic.user.isLoggedIn().then((isLogged: boolean) => {\n        this._isLoggedIn = isLogged;\n      });\n    }\n  }\n\n  handleLoggedInChange() {\n    if (this._magic) {\n      // Get details for logged in user\n      this._magic!.user.getMetadata().then((data: MagicUserMetadata) => {\n        this._loggedInUser = data;\n      });\n    }\n  }\n\n  handleEmailChange(e: CustomEvent<string>) {\n    this._email = e.detail;\n    if (this._requireEmail) {\n      this._requireEmail = false;\n    }\n  }\n\n  protected willUpdate(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    if (_changedProperties.has('magicPubKey')) this.handleMagicPubKeyChange();\n    if (_changedProperties.has('_isLoggedIn') && this._isLoggedIn)\n      this.handleLoggedInChange();\n  }\n\n  render() {\n    return html`\n      <div>\n        <img src=${bldnLogoSvg} alt=\"blindnet-logo\" />\n        ${when(\n          this._magic,\n          () => html`\n            ${when(\n              this._isLoggedIn && this._loggedInUser,\n              () => {\n                window.location.replace(\n                  this.redirectUri ?? window.location.toString()\n                );\n              },\n              () => html`\n                ${when(\n                  this.prompt,\n                  () => html` <span><b>${this.prompt}</b></span> `\n                )}\n                <bldn-input\n                  mode=${this._requireEmail ? 'error' : 'default'}\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email address\"\n                  @bldn-input:input=${this.handleEmailChange}\n                ></bldn-input>\n                <bldn-button type=\"submit\" @click=${this.handleSubmit}\n                  >${msg('Log in / Sign up')}</bldn-button\n                >\n              `\n            )}\n          `,\n          () => {\n            throw TypeError(\n              'You must provide a valid magic publishable API key via the magic-pub-key attribute.'\n            );\n          }\n        )}\n      </div>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      max-width: 500px;\n      color: var(--color-dark);\n      --bldn-button-border-radius: 20px;\n    }\n\n    div {\n      background: blue;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      row-gap: 40px;\n      padding: 60px 100px;\n      background: #ffffff;\n      box-shadow: 0px 33px 77px rgba(0, 0, 0, 0.16),\n        0px 9.94853px 23.2132px rgba(0, 0, 0, 0.104254),\n        0px 4.13211px 9.64159px rgba(0, 0, 0, 0.08),\n        0px 1.4945px 3.48718px rgba(0, 0, 0, 0.0557458);\n      border-radius: 10px;\n    }\n\n    span {\n      margin: 0px;\n      max-width: 300px;\n      font-size: 20px;\n    }\n  `;\n}\n"],"names":[],"mappings":"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"}