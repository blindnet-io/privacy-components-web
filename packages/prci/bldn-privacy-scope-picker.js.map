{"version":3,"file":"bldn-privacy-scope-picker.js","sources":["../src/bldn-privacy-scope-picker.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport { msg } from '@lit/localize';\nimport { css, html, LitElement, PropertyValueMap, TemplateResult } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { choose } from 'lit/directives/choose.js';\n\nimport { PrivacyScopeRestriction } from '@blindnet/core';\n\nimport './bldn-dropdown.js';\nimport './bldn-all-checklist.js';\nimport { when } from 'lit/directives/when.js';\n\nconst tooltipIcon = new URL(\n  './assets/icons/akar-icons_info.svg',\n  import.meta.url\n).href;\n\nconst tooltipIconSmall = new URL(\n  './assets/icons/akar-icons_info_small.svg',\n  import.meta.url\n).href;\n\ninterface Choice<T> {\n  value: T;\n  display: TemplateResult<1 | 2>;\n  allChoice?: boolean;\n  checked?: boolean;\n}\n\nfunction cartesianProduct<T>(...allEntries: T[][]): T[][] {\n  return allEntries.reduce<T[][]>(\n    (results, entries) =>\n      results\n        .map(result => entries.map(entry => [...result, entry]))\n        .reduce((subResults, result) => [...subResults, ...result], []),\n    [[]]\n  );\n}\n\n@customElement('blnd-privacy-scope-picker')\nexport class BldnPrivacyScopePicker extends LitElement {\n  @property({ type: String }) mode: 'select' | 'object' | 'restrict' = 'select';\n\n  @property({ type: Array, attribute: 'privacy-scope' })\n  privacyScope: PrivacyScopeRestriction[] = [\n    {\n      dc: '*',\n      pc: PrivacyScopeRestriction.pc._,\n      pp: PrivacyScopeRestriction.pp._,\n    },\n  ];\n\n  @property({ type: Array }) dataCategories: Choice<string>[] = [];\n\n  @property({ type: Array })\n  processingCategories: Choice<PrivacyScopeRestriction.pc>[] = [];\n\n  @property({ type: Array }) purposes: Choice<PrivacyScopeRestriction.pp>[] =\n    [];\n\n  @state() _dataCategories: Set<string> = new Set<string>();\n\n  @state() _processingCategories: Set<PrivacyScopeRestriction.pc> =\n    new Set<PrivacyScopeRestriction.pc>();\n\n  @state() _purposes: Set<PrivacyScopeRestriction.pp> =\n    new Set<PrivacyScopeRestriction.pp>();\n\n  @state() _showTooltip: boolean = false;\n\n  getModeTemplate() {\n    return html`\n      ${choose(this.mode, [\n        [\n          'select',\n          () => html`\n            ${msg('I select the following')}\n            <bldn-button\n              id=\"scope-tooltip-button\"\n              mode=\"link\"\n              underline-mode=\"dotted\"\n              @click=${() => {\n                this._showTooltip = !this._showTooltip;\n              }}\n              >${msg(html`<b>privacy scope</b>`)}</bldn-button\n            >\n          `,\n        ],\n        [\n          'object',\n          () => html`\n            ${msg('I object to the processing of my data within the following')}\n            <bldn-button\n              id=\"scope-tooltip-button\"\n              mode=\"link-icon\"\n              underline-mode=\"dotted\"\n              @click=${() => {\n                this._showTooltip = !this._showTooltip;\n              }}\n            >\n              ${msg(html`<b>privacy scope</b>`)}\n              <img src=${tooltipIconSmall} alt=\"privacy scope tooltip\" />\n            </bldn-button>\n          `,\n        ],\n        [\n          'restrict',\n          () => html`\n            ${msg('I restrict the processing of my data to the following')}\n            <bldn-button\n              id=\"scope-tooltip-button\"\n              mode=\"link\"\n              underline-mode=\"dotted\"\n              @click=${() => {\n                this._showTooltip = !this._showTooltip;\n              }}\n              >${msg(html`<b>privacy scope</b>`)}</bldn-button\n            >\n          `,\n        ],\n      ])}\n    `;\n  }\n\n  setPrivacyScope() {\n    const triples = cartesianProduct(\n      Array.from(this._dataCategories.values()),\n      Array.from(this._processingCategories.values()),\n      Array.from(this._purposes.values())\n    );\n    const privacyScope = triples.map(\n      (triple): PrivacyScopeRestriction => ({\n        dc: triple[0],\n        pc: triple[1] as PrivacyScopeRestriction.pc,\n        pp: triple[2] as PrivacyScopeRestriction.pp,\n      })\n    );\n    this.dispatchEvent(\n      new CustomEvent('bldn-privacy-scope-picker:scope-change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          privacyScope,\n        },\n      })\n    );\n  }\n\n  addDataCategory(e: Event) {\n    const { value } = (e as CustomEvent).detail;\n    this._dataCategories.add(value);\n    this.setPrivacyScope();\n    this.requestUpdate();\n  }\n\n  removeDataCategory(e: Event) {\n    const { value } = (e as CustomEvent).detail;\n    this._dataCategories.delete(value);\n    this.setPrivacyScope();\n    this.requestUpdate();\n  }\n\n  addProcessingCategory(e: Event) {\n    const { value } = (e as CustomEvent).detail;\n    this._processingCategories.add(value);\n    this.setPrivacyScope();\n    this.requestUpdate();\n  }\n\n  removeProcessingCategory(e: Event) {\n    const { value } = (e as CustomEvent).detail;\n    this._processingCategories.delete(value);\n    this.setPrivacyScope();\n    this.requestUpdate();\n  }\n\n  addPurpose(e: Event) {\n    const { value } = (e as CustomEvent).detail;\n    this._purposes.add(value);\n    this.setPrivacyScope();\n    this.requestUpdate();\n  }\n\n  removePurpose(e: Event) {\n    const { value } = (e as CustomEvent).detail;\n    this._purposes.delete(value);\n    this.setPrivacyScope();\n    this.requestUpdate();\n  }\n\n  handlePrivacyScopeChange() {\n    // Extract dc, pc, and pp from the privacy scope passed in\n    this._dataCategories = new Set<string>(\n      this.privacyScope.map(triple => triple.dc)\n    );\n    this._processingCategories = new Set<PrivacyScopeRestriction.pc>(\n      this.privacyScope.map(triple => triple.pc)\n    );\n    this._purposes = new Set<PrivacyScopeRestriction.pp>(\n      this.privacyScope.map(triple => triple.pp)\n    );\n  }\n\n  protected willUpdate(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    if (_changedProperties.has('privacyScope')) this.handlePrivacyScopeChange();\n  }\n\n  render() {\n    return html`\n      <p><b>${this.getModeTemplate()}</b></p>\n      <p id=\"scope-summary\">\n        ${msg(html`\n          Data from\n          <span class=\"scope-counter\"\n            ><b\n              >${this._dataCategories.size === 1 &&\n              this._dataCategories.has('*')\n                ? 'all'\n                : this._dataCategories.size}</b\n            ></span\n          >\n          categories, processed in\n          <span class=\"scope-counter\"\n            ><b\n              >${this._processingCategories.size === 1 &&\n              this._processingCategories.has(PrivacyScopeRestriction.pc._)\n                ? 'all'\n                : this._processingCategories.size}</b\n            ></span\n          >\n          ways, for\n          <span class=\"scope-counter\"\n            ><b\n              >${this._purposes.size === 1 &&\n              this._purposes.has(PrivacyScopeRestriction.pp._)\n                ? 'all'\n                : this._purposes.size}</b\n            ></span\n          >\n          purposes\n        `)}\n      </p>\n      ${when(\n        this._showTooltip,\n        () => html`\n        <div id='tooltip'>\n          <img src=${tooltipIcon} alt='info box'></img>\n          <span>${msg(\n            html`A <b><i>Privacy Scope</i></b> describes one or more types of\n              data (<i>data categories</i>), how it is processed (<i\n                >processing categories</i\n              >), and why it is processed that way (<i>purposes of processing</i\n              >).`\n          )}</span>\n        </div>\n      `\n      )}\n      <p id=\"expand-tip\">\n        <i>${msg('Expand a dropdown to customise your scope')}</i>\n      </p>\n      <bldn-dropdown>\n        <span slot=\"heading\"><strong>${msg('Data Categories')}</strong></span>\n        <p>${msg('The types of data in my privacy scope are:')}</p>\n        <bldn-all-checklist\n          .choices=${this.dataCategories.map(choice => {\n            choice.checked = this._dataCategories.has(choice.value);\n            return choice;\n          })}\n          @bldn-all-checklist:choice-select=${this.addDataCategory}\n          @bldn-all-checklist:choice-deselect=${this.removeDataCategory}\n        ></bldn-all-checklist>\n      </bldn-dropdown>\n      <bldn-dropdown>\n        <span slot=\"heading\"\n          ><strong>${msg('Processing Categories')}</strong></span\n        >\n        <p>${msg('The ways data in my privacy scope is processed:')}</p>\n        <bldn-all-checklist\n          .choices=${this.processingCategories.map(choice => {\n            choice.checked = this._processingCategories.has(choice.value);\n            return choice;\n          })}\n          @bldn-all-checklist:choice-select=${this.addProcessingCategory}\n          @bldn-all-checklist:choice-deselect=${this.removeProcessingCategory}\n        ></bldn-all-checklist>\n      </bldn-dropdown>\n      <bldn-dropdown>\n        <span slot=\"heading\"\n          ><strong>${msg('Purposes of Processing')}</strong></span\n        >\n        <p>${msg('The reasons for processing data in my privacy scope:')}</p>\n        <bldn-all-checklist\n          .choices=${this.purposes.map(choice => {\n            choice.checked = this._purposes.has(choice.value);\n            return choice;\n          })}\n          @bldn-all-checklist:choice-select=${this.addPurpose}\n          @bldn-all-checklist:choice-deselect=${this.removePurpose}\n        ></bldn-all-checklist>\n      </bldn-dropdown>\n    `;\n  }\n\n  static styles = css`\n    :host {\n      color: var(--bldn-privacy-scope-picker-font-color, var(--color-dark));\n      text-align: left;\n    }\n\n    bldn-dropdown:not(:last-child) {\n      border-bottom: 2px solid\n        var(\n          --bldn-privacy-scope-picker-dropdown-divider-color,\n          var(--color-lightest)\n        );\n    }\n\n    p {\n      margin: 1.5em 0;\n    }\n\n    #scope-summary {\n      line-height: 30px;\n    }\n\n    .scope-counter {\n      background: var(--color-light);\n      padding: 0.3em 0.5em;\n      border-radius: 5px;\n    }\n\n    #tooltip {\n      display: flex;\n      padding: 1em;\n      gap: 1em;\n      background: var(--color-lightest);\n      border-radius: 20px;\n    }\n\n    #tooltip img {\n      align-self: center;\n    }\n\n    #expand-tip {\n      color: var(--color-medium);\n    }\n  `;\n}\n"],"names":[],"mappings":";;;;;;;;;;AAYA,MAAM,WAAW,GAAG,IAAI,GAAG,CACzB,2DAAoC,EACpC,MAAM,CAAC,IAAI,CAAC,GAAG,CAChB,CAAC,IAAI,CAAC;AAEP,MAAM,gBAAgB,GAAG,IAAI,GAAG,CAC9B,iEAA0C,EAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,CAChB,CAAC,IAAI,CAAC;AASP,SAAS,gBAAgB,CAAI,GAAG,UAAiB,EAAA;IAC/C,OAAO,UAAU,CAAC,MAAM,CACtB,CAAC,OAAO,EAAE,OAAO,KACf,OAAO;SACJ,GAAG,CAAC,MAAM,IAAI,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;SACvD,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,KAAK,CAAC,GAAG,UAAU,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,EACnE,CAAC,EAAE,CAAC,CACL,CAAC;AACJ,CAAC;AAGD,IAAa,sBAAsB,GAAnC,MAAa,sBAAuB,SAAQ,UAAU,CAAA;AAAtD,IAAA,WAAA,GAAA;;QAC8B,IAAI,CAAA,IAAA,GAAqC,QAAQ,CAAC;AAG9E,QAAA,IAAA,CAAA,YAAY,GAA8B;AACxC,YAAA;AACE,gBAAA,EAAE,EAAE,GAAG;AACP,gBAAA,EAAE,EAAE,uBAAuB,CAAC,EAAE,CAAC,CAAC;AAChC,gBAAA,EAAE,EAAE,uBAAuB,CAAC,EAAE,CAAC,CAAC;AACjC,aAAA;SACF,CAAC;QAEyB,IAAc,CAAA,cAAA,GAAqB,EAAE,CAAC;QAGjE,IAAoB,CAAA,oBAAA,GAAyC,EAAE,CAAC;QAErC,IAAQ,CAAA,QAAA,GACjC,EAAE,CAAC;AAEI,QAAA,IAAA,CAAA,eAAe,GAAgB,IAAI,GAAG,EAAU,CAAC;AAEjD,QAAA,IAAA,CAAA,qBAAqB,GAC5B,IAAI,GAAG,EAA8B,CAAC;AAE/B,QAAA,IAAA,CAAA,SAAS,GAChB,IAAI,GAAG,EAA8B,CAAC;QAE/B,IAAY,CAAA,YAAA,GAAY,KAAK,CAAC;KAyRxC;IAvRC,eAAe,GAAA;AACb,QAAA,OAAO,IAAI,CAAA,CAAA;AACP,MAAA,EAAA,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;AAClB,YAAA;gBACE,QAAQ;gBACR,MAAM,IAAI,CAAA,CAAA;cACN,GAAG,CAAC,wBAAwB,CAAC,CAAA;;;;;AAKpB,qBAAA,EAAA,MAAK;AACZ,oBAAA,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;iBACxC,CAAA;AACE,eAAA,EAAA,GAAG,CAAC,IAAI,CAAA,CAAA,oBAAA,CAAsB,CAAC,CAAA;;AAErC,UAAA,CAAA;AACF,aAAA;AACD,YAAA;gBACE,QAAQ;gBACR,MAAM,IAAI,CAAA,CAAA;cACN,GAAG,CAAC,4DAA4D,CAAC,CAAA;;;;;AAKxD,qBAAA,EAAA,MAAK;AACZ,oBAAA,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;iBACxC,CAAA;;AAEC,cAAA,EAAA,GAAG,CAAC,IAAI,CAAA,CAAA,oBAAA,CAAsB,CAAC,CAAA;yBACtB,gBAAgB,CAAA;;AAE9B,UAAA,CAAA;AACF,aAAA;AACD,YAAA;gBACE,UAAU;gBACV,MAAM,IAAI,CAAA,CAAA;cACN,GAAG,CAAC,uDAAuD,CAAC,CAAA;;;;;AAKnD,qBAAA,EAAA,MAAK;AACZ,oBAAA,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;iBACxC,CAAA;AACE,eAAA,EAAA,GAAG,CAAC,IAAI,CAAA,CAAA,oBAAA,CAAsB,CAAC,CAAA;;AAErC,UAAA,CAAA;AACF,aAAA;SACF,CAAC,CAAA;KACH,CAAC;KACH;IAED,eAAe,GAAA;AACb,QAAA,MAAM,OAAO,GAAG,gBAAgB,CAC9B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EACzC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAC/C,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CACpC,CAAC;QACF,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAC9B,CAAC,MAAM,MAA+B;AACpC,YAAA,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;AACb,YAAA,EAAE,EAAE,MAAM,CAAC,CAAC,CAA+B;AAC3C,YAAA,EAAE,EAAE,MAAM,CAAC,CAAC,CAA+B;AAC5C,SAAA,CAAC,CACH,CAAC;AACF,QAAA,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,wCAAwC,EAAE;AACxD,YAAA,OAAO,EAAE,IAAI;AACb,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,MAAM,EAAE;gBACN,YAAY;AACb,aAAA;AACF,SAAA,CAAC,CACH,CAAC;KACH;AAED,IAAA,eAAe,CAAC,CAAQ,EAAA;AACtB,QAAA,MAAM,EAAE,KAAK,EAAE,GAAI,CAAiB,CAAC,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAChC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED,IAAA,kBAAkB,CAAC,CAAQ,EAAA;AACzB,QAAA,MAAM,EAAE,KAAK,EAAE,GAAI,CAAiB,CAAC,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED,IAAA,qBAAqB,CAAC,CAAQ,EAAA;AAC5B,QAAA,MAAM,EAAE,KAAK,EAAE,GAAI,CAAiB,CAAC,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED,IAAA,wBAAwB,CAAC,CAAQ,EAAA;AAC/B,QAAA,MAAM,EAAE,KAAK,EAAE,GAAI,CAAiB,CAAC,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED,IAAA,UAAU,CAAC,CAAQ,EAAA;AACjB,QAAA,MAAM,EAAE,KAAK,EAAE,GAAI,CAAiB,CAAC,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;AAED,IAAA,aAAa,CAAC,CAAQ,EAAA;AACpB,QAAA,MAAM,EAAE,KAAK,EAAE,GAAI,CAAiB,CAAC,MAAM,CAAC;AAC5C,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,wBAAwB,GAAA;;QAEtB,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,CAC5B,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,CAAC,CAC3C,CAAC;QACF,IAAI,CAAC,qBAAqB,GAAG,IAAI,GAAG,CAClC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,CAAC,CAC3C,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,CACtB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,CAAC,CAC3C,CAAC;KACH;AAES,IAAA,UAAU,CAClB,kBAAqE,EAAA;AAErE,QAAA,IAAI,kBAAkB,CAAC,GAAG,CAAC,cAAc,CAAC;YAAE,IAAI,CAAC,wBAAwB,EAAE,CAAC;KAC7E;IAED,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAA,CAAA;cACD,IAAI,CAAC,eAAe,EAAE,CAAA;;UAE1B,GAAG,CAAC,IAAI,CAAA,CAAA;;;;AAID,eAAA,EAAA,IAAI,CAAC,eAAe,CAAC,IAAI,KAAK,CAAC;AAClC,YAAA,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3B,cAAE,KAAK;AACP,cAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAA;;;;;;AAM1B,eAAA,EAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,KAAK,CAAC;YACxC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1D,cAAE,KAAK;AACP,cAAE,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAA;;;;;;AAMhC,eAAA,EAAA,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C,cAAE,KAAK;AACP,cAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAA;;;;SAI5B,CAAC,CAAA;;QAEF,IAAI,CACJ,IAAI,CAAC,YAAY,EACjB,MAAM,IAAI,CAAA,CAAA;;qBAEG,WAAW,CAAA;kBACd,GAAG,CACT,IAAI,CAAA,CAAA;;;;kBAIE,CACP,CAAA;;OAEJ,CACA,CAAA;;aAEM,GAAG,CAAC,2CAA2C,CAAC,CAAA;;;uCAGtB,GAAG,CAAC,iBAAiB,CAAC,CAAA;aAChD,GAAG,CAAC,4CAA4C,CAAC,CAAA;;AAEzC,mBAAA,EAAA,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,MAAM,IAAG;AAC1C,YAAA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACxD,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAA;AACkC,4CAAA,EAAA,IAAI,CAAC,eAAe,CAAA;AAClB,8CAAA,EAAA,IAAI,CAAC,kBAAkB,CAAA;;;;;qBAKlD,GAAG,CAAC,uBAAuB,CAAC,CAAA;;aAEpC,GAAG,CAAC,iDAAiD,CAAC,CAAA;;AAE9C,mBAAA,EAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,IAAG;AAChD,YAAA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9D,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAA;AACkC,4CAAA,EAAA,IAAI,CAAC,qBAAqB,CAAA;AACxB,8CAAA,EAAA,IAAI,CAAC,wBAAwB,CAAA;;;;;qBAKxD,GAAG,CAAC,wBAAwB,CAAC,CAAA;;aAErC,GAAG,CAAC,sDAAsD,CAAC,CAAA;;AAEnD,mBAAA,EAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,IAAG;AACpC,YAAA,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAClD,YAAA,OAAO,MAAM,CAAC;AAChB,SAAC,CAAC,CAAA;AACkC,4CAAA,EAAA,IAAI,CAAC,UAAU,CAAA;AACb,8CAAA,EAAA,IAAI,CAAC,aAAa,CAAA;;;KAG7D,CAAC;KACH;EA8CF;AA5CQ,sBAAM,CAAA,MAAA,GAAG,GAAG,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2ClB,CAAC;AAnT0B,UAAA,CAAA;AAA3B,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;AAAmD,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,MAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAG9E,UAAA,CAAA;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;AAOpD,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAEyB,UAAA,CAAA;AAA1B,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAAuC,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAGjE,UAAA,CAAA;AADC,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACsC,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,sBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAErC,UAAA,CAAA;AAA1B,IAAA,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACrB,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAEI,UAAA,CAAA;AAAR,IAAA,KAAK,EAAE;AAAkD,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,iBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAEjD,UAAA,CAAA;AAAR,IAAA,KAAK,EAAE;AACgC,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,uBAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAE/B,UAAA,CAAA;AAAR,IAAA,KAAK,EAAE;AACgC,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAE/B,UAAA,CAAA;AAAR,IAAA,KAAK,EAAE;AAA+B,CAAA,EAAA,sBAAA,CAAA,SAAA,EAAA,cAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AA5B5B,sBAAsB,GAAA,UAAA,CAAA;IADlC,aAAa,CAAC,2BAA2B,CAAC;AAC9B,CAAA,EAAA,sBAAsB,CAqTlC;;;;"}