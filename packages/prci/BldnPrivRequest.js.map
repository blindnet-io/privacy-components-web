{"version":3,"file":"BldnPrivRequest.js","sources":["../src/BldnPrivRequest.ts"],"sourcesContent":["import { html, css, LitElement, PropertyValueMap, TemplateResult } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { choose } from 'lit/directives/choose.js';\nimport { map } from 'lit/directives/map.js';\nimport { localized, msg } from '@lit/localize';\nimport {\n  DATA_CATEGORY,\n  TARGET,\n  Demand,\n  PrivacyRequest,\n  ComputationAPI,\n  CoreConfigurationMixin,\n  ACTION,\n} from '@blindnet/core';\nimport { ComponentState } from './utils/states.js';\nimport {\n  getDefaultActions,\n  getDefaultDataCategories,\n  getDefaultDemands,\n} from './utils/utils.js';\nimport { PRCI_CONFIG } from './utils/conf.js';\nimport { PRCIStyles } from './styles.js';\n\nimport './FrequentRequestsMenu.js';\nimport './ReviewView.js';\nimport './ActionMenuView.js';\nimport './RequestsView.js';\nimport './StatusView.js';\nimport './demand-forms/TransparencyForm.js';\nimport './demand-forms/AccessForm.js';\nimport './demand-forms/DeleteForm.js';\nimport './demand-forms/RevokeConsentForm.js';\n\n/**\n * Top level component encapsulating a single PrivacyRequest. Contains one or\n * more DemandBuilder elements, each for a single demand action type.\n *\n */\n@customElement('bldn-priv-request')\n@localized()\nexport class BldnPrivRequest extends CoreConfigurationMixin(LitElement) {\n  static styles = [\n    PRCIStyles,\n    css`\n      :host {\n        display: flex;\n        justify-content: center;\n        justify-items: center;\n\n        font-family: var(\n          --prci-font-family,\n          -apple-system,\n          BlinkMacSystemFont,\n          'Segoe UI',\n          Roboto,\n          Oxygen,\n          Ubuntu,\n          Cantarell,\n          'Open Sans',\n          'Helvetica Neue',\n          sans-serif\n        );\n        color: var(--prci-font-color, #000000);\n        font-size: 16;\n        text-align: left;\n      }\n\n      #prci-ctr {\n        padding: 20px;\n        max-width: 1350px;\n      }\n\n      #heading-ctr {\n        padding: 0px 0px 40px 0px;\n        max-width: 1170px;\n      }\n\n      .req-hdr {\n        display: block;\n        font-weight: bold;\n        font-size: 24px;\n        grid-column: 2/3;\n        text-align: center;\n      }\n\n      button:disabled {\n        background-color: #a9d1ff;\n      }\n    `,\n  ];\n\n  /** JSON list of allowed actions */\n  @property({ type: String }) actions = '';\n\n  /** JSON list of allowed data categories */\n  @property({ type: String, attribute: 'data-categories' })\n  dataCategories: string = '';\n\n  /** @prop {string} requestId - a request ID. If provided, the initial PRCI view will be the status page for the provided request ID */\n  @property({ type: String, attribute: 'request-id' }) requestId: string = '';\n\n  // Array of available actions, given by actions property if a valid list was passed\n  @state() _includedActions: ACTION[] = getDefaultActions();\n\n  // Array of available data categories, given by dataCategories property if a valid list was passed\n  @state() _includedDataCategories: DATA_CATEGORY[] =\n    getDefaultDataCategories();\n\n  @state() _currentRequestId: string = '';\n\n  @state() _currentDemandGroupId: string = '';\n\n  @state() _currentAction: ACTION = ACTION.TRANSPARENCY;\n\n  // Privacy request object, empty until some demands are added\n  @state() _privacyRequest: PrivacyRequest = {\n    demands: [],\n    data_subject: [\n      {\n        // FIXME: For now we hardcode this, but will come from token once auth added\n        // id: 'fdfc95a6-8fd8-4581-91f7-b3d236a6a10e',\n        // TODO: remove this when auth is implemented\n        id: localStorage.getItem('priv_user_id') || 'john.doe@example.com',\n        schema: 'dsid',\n      },\n    ],\n    email: '',\n    target: TARGET.PARTNERS,\n  };\n\n  // Map of demand group ids to sets of demands\n  @state() _demands: Map<string, Demand[]> = new Map<string, Demand[]>();\n\n  @state() _config = PRCI_CONFIG;\n\n  // UI state indicating which view to show\n  @state() _componentState: ComponentState = ComponentState.MENU;\n\n  constructor() {\n    super();\n\n    const params = new URLSearchParams(window.location.search);\n    const requestId = params.get('requestId');\n    if (requestId) {\n      this._currentRequestId = requestId;\n      this._componentState = ComponentState.STATUS;\n    }\n\n    // Initialize demands and current demand group to the same uuid\n    const initialGroup = crypto.randomUUID();\n    this._demands.set(initialGroup, []);\n    this._currentDemandGroupId = initialGroup;\n\n    // State change listener\n    this.addEventListener('component-state-change', e => {\n      const details = (e as CustomEvent).detail;\n      this._componentState = details.newState;\n\n      switch (this._componentState) {\n        case ComponentState.EDIT:\n          this._currentAction = details.newAction;\n          if (details.demandGroupId !== undefined) {\n            this._currentDemandGroupId = details.demandGroupId;\n          }\n          break;\n        case ComponentState.SUBMITTED:\n          break;\n        case ComponentState.MENU:\n          // For now, going back to the menu means we reset. This will change\n          // when supporting multiple demands.\n          this._demands.set(this._currentDemandGroupId, []);\n          break;\n        case ComponentState.STATUS:\n          this._currentRequestId = details.requestId;\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  private setMultipleDemands = (e: Event) => {\n    if (e instanceof CustomEvent) {\n      const { demandGroupId, demands } = e.detail;\n      this._demands.set(demandGroupId, demands);\n    }\n  };\n\n  private setDemand = (e: Event) => {\n    if (e instanceof CustomEvent) {\n      const { demandGroupId, demand } = e.detail;\n      this._demands.set(demandGroupId, [demand]);\n    }\n  };\n\n  private deleteDemand = (e: Event) => {\n    if (e instanceof CustomEvent) {\n      const { demandGroupId } = e.detail;\n      this._demands.delete(demandGroupId);\n      this.requestUpdate();\n    }\n  };\n\n  private changeRequestTarget = (e: Event) => {\n    if (e instanceof CustomEvent) {\n      const { id } = e.detail;\n      this._privacyRequest.target = id as TARGET;\n    }\n  };\n\n  private submitRequest = async () => {\n    const allDemands = Array.from(this._demands.values()).reduce(\n      (dmds, dmdGroup) => dmds.concat(dmdGroup),\n      []\n    );\n    this._privacyRequest.demands = allDemands.map((d, i) => {\n      // eslint-disable-next-line no-param-reassign\n      d.id = i.toString();\n      return d;\n    });\n\n    const response = await ComputationAPI.getInstance().sendPrivacyRequest(\n      this._privacyRequest\n    );\n\n    this.dispatchEvent(\n      new CustomEvent('component-state-change', {\n        detail: {\n          newState: ComponentState.STATUS,\n          requestId: response.request_id,\n        },\n      })\n    );\n  };\n\n  connectedCallback(): void {\n    // eslint-disable-next-line wc/guard-super-call\n    super.connectedCallback();\n\n    // Demand update listener\n    this.addEventListener('demand-set-multiple', this.setMultipleDemands);\n    this.addEventListener('demand-set', this.setDemand);\n    this.addEventListener('demand-delete', this.deleteDemand);\n\n    // Request target listener\n    this.addEventListener('request-target-change', this.changeRequestTarget);\n\n    // Submit request listener\n    this.addEventListener('submit-request', this.submitRequest);\n  }\n\n  disconnectedCallback(): void {\n    this.removeEventListener('demand-set-multiple', this.setMultipleDemands);\n    this.removeEventListener('demand-set', this.setDemand);\n    this.removeEventListener('demand-delete', this.deleteDemand);\n    this.removeEventListener('request-target-change', this.changeRequestTarget);\n    this.removeEventListener('submit-request', this.submitRequest);\n  }\n\n  /**\n   * Reset most states\n   * // TODO: Remove this and use something like getDefaultDemand() from the forms\n   */\n  handleRestartClick() {\n    this._privacyRequest = {\n      demands: [],\n      data_subject: [\n        {\n          // FIXME: For now we hardcode this, but will come from token once auth added\n          // id: 'fdfc95a6-8fd8-4581-91f7-b3d236a6a10e',\n          // TODO: remove this when auth is implemented\n          id: localStorage.getItem('priv_user_id') || 'john.doe@example.com',\n          schema: 'dsid',\n        },\n      ],\n      email: '',\n      target: TARGET.PARTNERS,\n    };\n    this._demands = new Map<string, Demand[]>();\n  }\n\n  /**\n   * Return a form based on action type with either default or prepopulated demand data\n   * @param action PRIV action for which to return a form\n   * @returns\n   */\n  actionFormFactory(action: ACTION) {\n    const demandGroup = this._demands.get(this._currentDemandGroupId);\n\n    // Use one of the multi demand forms\n    if (action === ACTION.TRANSPARENCY) {\n      // Decide if we should use the default demand or not\n      const multiDemand =\n        demandGroup && demandGroup.length !== 0\n          ? demandGroup\n          : getDefaultDemands(action);\n      return html`\n        <transparency-form\n          .demands=${multiDemand}\n          .demandGroupId=${this._currentDemandGroupId}\n          .restrictions=${multiDemand[0].restrictions}\n        ></transparency-form>\n      `;\n    }\n\n    // Use one of the single demand forms\n    const demand =\n      demandGroup && demandGroup.length !== 0 ? demandGroup[0] : undefined;\n    const useDefault = !demandGroup || demandGroup.length === 0;\n    // Get the form for all other action types\n    return html`\n      ${choose(\n        action,\n        [\n          [\n            ACTION.ACCESS,\n            () => html`\n              <access-form\n                .demand=${demandGroup ?? ''}\n                .demandGroupId=${this._currentDemandGroupId}\n                .allowedDataCategories=${this._includedDataCategories}\n                .default=${useDefault}\n              ></access-form>\n            `,\n          ],\n          [\n            ACTION.DELETE,\n            () => html`\n              <delete-form\n                .demand=${demand}\n                .demandGroupId=${this._currentDemandGroupId}\n                .allowedDataCategories=${this._includedDataCategories}\n                .default=${useDefault}\n              ></delete-form>\n            `,\n          ],\n          [ACTION.MODIFY, () => html``],\n          [ACTION.OBJECT, () => html``],\n          [ACTION.PORTABILITY, () => html``],\n          [ACTION.RESTRICT, () => html``],\n          [\n            ACTION.REVOKE,\n            () => html`\n              <revoke-consent-form\n                .demand=${demand}\n                .demandGroupId=${this._currentDemandGroupId}\n              ></revoke-consent-form>\n            `,\n          ],\n          [ACTION['OTHER.DEMAND'], () => html``],\n        ],\n        () => html`${msg('Error: Invalid Action')}`\n      )}\n    `;\n  }\n\n  getHeadingString(componentState: ComponentState): TemplateResult<1 | 2> {\n    switch (componentState) {\n      case ComponentState.REQUESTS:\n        return html`${msg('My Submitted Privacy Request(s)')}`;\n      case ComponentState.STATUS:\n        return html`${msg('My Privacy Request Status')}`;\n      default:\n        return html`${msg('My Privacy Request')}`;\n    }\n  }\n\n  // Hook into willUpdate lifecycle method to set the included actions state if a valid list of actions is passed as an attribute\n  protected willUpdate(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    if (_changedProperties.has('actions') && this.actions) {\n      try {\n        // Select the valid actions from those passed in\n        const actionsList = (\n          Array.from(JSON.parse(this.actions)) as string[]\n        ).map(a => a.toLocaleLowerCase());\n        const validActionsList = getDefaultActions().filter(a =>\n          actionsList.includes(a.toLocaleLowerCase())\n        );\n        // If any valid actions were passed in, use them\n        if (validActionsList.length > 0) {\n          this._includedActions = validActionsList;\n        }\n      } catch {\n        this._includedActions = getDefaultActions();\n      }\n    }\n\n    if (_changedProperties.has('dataCategories') && this.dataCategories) {\n      try {\n        // Select the valid data categories from those passed in\n        const dataCategoriesList = (\n          Array.from(JSON.parse(this.dataCategories)) as string[]\n        ).map(dc => dc.toLocaleLowerCase());\n        const validDataCategories = getDefaultDataCategories().filter(dc =>\n          dataCategoriesList.includes(dc.toLocaleLowerCase())\n        );\n        // If any valid data categories were passed in, use them\n        if (validDataCategories.length > 0) {\n          this._includedDataCategories = validDataCategories;\n        }\n      } catch {\n        this._includedDataCategories = getDefaultDataCategories();\n      }\n    }\n  }\n\n  render() {\n    return html`\n      <div id=\"prci-ctr\">\n        <div id=\"heading-ctr\">\n          <span class=\"req-hdr\"\n            >${this.getHeadingString(this._componentState)}</span\n          >\n        </div>\n        ${choose(this._componentState, [\n          [\n            ComponentState.MENU,\n            () => html`\n              <div>\n                <action-menu-view\n                  .includedActions=${this._includedActions}\n                ></action-menu-view>\n              </div>\n            `,\n          ],\n          [\n            ComponentState.EDIT,\n            () => html`\n              <div class=\"border--medium border--rounded view-ctr\">\n                ${this.actionFormFactory(this._currentAction)}\n              </div>\n            `,\n          ],\n          [\n            ComponentState.REVIEW,\n            () => html`\n              <div class=\"border--medium border--rounded view-ctr\">\n                ${map(\n                  this._demands.entries(),\n                  ([groupId, demands]) => html`<review-view\n                    .demandGroupId=${groupId}\n                    .demands=${demands}\n                  ></review-view>`\n                )}\n              </div>\n            `,\n          ],\n          [\n            ComponentState.REQUESTS,\n            () => html`<requests-view></requests-view>`,\n          ],\n          [\n            ComponentState.STATUS,\n            () => html` <status-view\n              request-id=${this._currentRequestId}\n            ></status-view>`,\n          ],\n          [\n            ComponentState.SUBMITTED,\n            () => html`\n              <p>\n                <b>${msg('Your Privacy Request has been sent!')} 🎉</b>\n              </p>\n              <p>${msg('You may track the status of your request below.')}</p>\n            `,\n          ],\n          [ComponentState.AUTH, () => html` <auth-view></auth-view> `],\n        ])}\n      </div>\n    `;\n  }\n}\n"],"names":[],"mappings":"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"}