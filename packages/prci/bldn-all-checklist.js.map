{"version":3,"file":"bldn-all-checklist.js","sources":["../src/bldn-all-checklist.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable no-lonely-if */\nimport { msg } from '@lit/localize';\nimport { css, html, LitElement, PropertyValueMap, TemplateResult } from 'lit';\nimport {\n  customElement,\n  property,\n  query,\n  queryAll,\n  state,\n} from 'lit/decorators.js';\nimport { when } from 'lit/directives/when.js';\n\nconst allCheckboxCheckedSvg = new URL(\n  './assets/icons/all-checkbox-checked.svg',\n  import.meta.url\n).href;\n\nconst allCheckboxDashSvg = new URL(\n  './assets/icons/all-checkbox-dash.svg',\n  import.meta.url\n).href;\n\nconst allCheckboxUncheckedSvg = new URL(\n  './assets/icons/all-checkbox-unchecked.svg',\n  import.meta.url\n).href;\n\nconst closeContainerArrowSvg = new URL(\n  './assets/icons/close-container-arrow.svg',\n  import.meta.url\n).href;\n\nconst expandListSvg = new URL(\n  './assets/icons/bx_dots-vertical-rounded.svg',\n  import.meta.url\n).href;\n\ninterface Choice {\n  value: string;\n  display: TemplateResult<1 | 2>;\n  checked: boolean;\n  allChoice?: boolean;\n}\n\n/**\n * States describing the choice list\n */\nenum SelectionState {\n  ALL,\n  SOME,\n  NONE,\n}\n\n/**\n * @event {CustomEvent} bldn-all-checklist:choice-select - Fired when a choice is selected\n * @event {CustomEvent} bldn-all-checklist:choice-deselect - Fired when a choice is deselected\n */\n@customElement('bldn-all-checklist')\nexport class BldnAllChecklist extends LitElement {\n  // List of choices to be displayed with a unique identifier, description string (displayed),\n  // and checked boolean indicating if the option should be checked initially\n  @property({ type: Array }) choices: Choice[] = [];\n\n  /** @prop */\n  @property({ type: Boolean, reflect: true }) open: boolean = false;\n\n  /** @prop */\n  @property({ type: Boolean, attribute: 'include-other' }) includeOther = false;\n\n  // TODO: Move this to state\n  @property({ type: Number, reflect: true, attribute: 'selection-state' })\n  selectionState: SelectionState = SelectionState.ALL;\n\n  // Holds the IDs of all selected choices\n  @state() selectedChoices = new Set<string>();\n\n  @query('#all-checkbox')\n  allCheckbox!: HTMLInputElement;\n\n  @queryAll('.choice-checkbox')\n  choiceCheckboxes!: HTMLInputElement[];\n\n  /**\n   * Select a choice and notify parent component\n   * @param value value of the choice to select\n   */\n  selectChoice(value: string) {\n    this.selectedChoices.add(value);\n    // Fire add event\n    const event = new CustomEvent(`bldn-all-checklist:choice-select`, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        value,\n        'first-selection': this.selectedChoices.size === 1,\n      },\n    });\n    this.dispatchEvent(event);\n  }\n\n  /**\n   * Deselect a choice and notify parent component\n   * @param value value of the choice to delete\n   */\n  deselectChoice(value: string) {\n    this.selectedChoices.delete(value);\n    // Fire delete event\n    const event = new CustomEvent(`bldn-all-checklist:choice-deselect`, {\n      bubbles: true,\n      composed: true,\n      detail: {\n        value,\n        'none-selected': this.selectedChoices.size === 0,\n      },\n    });\n    this.dispatchEvent(event);\n  }\n\n  handleChoiceClick(e: Event) {\n    const { id, checked } = e.target as HTMLInputElement;\n\n    if (id === 'all-checkbox') {\n      if (checked) {\n        // Check all inputs\n        this.choiceCheckboxes.forEach(input => {\n          input.checked = true;\n        });\n        // Select the all choice and deselect all others\n        this.choices.forEach(c => {\n          if (c.allChoice) {\n            this.selectChoice(c.value);\n          } else {\n            this.deselectChoice(c.value);\n          }\n        });\n      } else {\n        // Uncheck all inputs\n        this.choiceCheckboxes.forEach(input => {\n          input.checked = false;\n        });\n        // Deselect all choices\n        this.choices.forEach(c => {\n          this.deselectChoice(c.value);\n        });\n      }\n    } else if (checked) {\n      if (this.selectedChoices.size === this.choices.length - 2) {\n        // Deselect all choices and select the all choice\n        this.allCheckbox.checked = true;\n        this.choices.forEach(c => {\n          if (!c.allChoice) {\n            this.deselectChoice(c.value);\n          } else {\n            this.selectChoice(c.value);\n          }\n        });\n        // Tick all checkboxes\n        this.choiceCheckboxes.forEach(input => {\n          input.checked = true;\n        });\n        this.allCheckbox.checked = true;\n      } else {\n        // Select one choice as this wasn't that last one before every choice was checked\n        this.selectChoice(id);\n      }\n    } else {\n      if (this.allCheckbox.checked) {\n        // Select all other choices if all was checked\n        this.allCheckbox.checked = false;\n        this.choices.forEach(c => {\n          if (c.value !== id && !c.allChoice) {\n            this.selectChoice(c.value);\n          } else if (c.value) {\n            this.deselectChoice(c.value);\n          }\n        });\n      } else {\n        // Deselect one choice as all wasn't checked already\n        this.deselectChoice(id);\n      }\n    }\n\n    // Update component state so checkboxes render properly\n    this.updateSelectionState();\n  }\n\n  // TODO: Combine these two other events into one change event\n  handleOtherClick(e: Event) {\n    this.dispatchEvent(\n      new CustomEvent(`bldn-all-checklist:other-click`, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          checked: (e.target as HTMLInputElement).checked,\n        },\n      })\n    );\n  }\n\n  handleOtherInput(e: Event) {\n    this.dispatchEvent(\n      new CustomEvent(`bldn-all-checklist:other-input`, {\n        bubbles: true,\n        composed: true,\n        detail: {\n          text: (e.target as HTMLInputElement).value,\n        },\n      })\n    );\n  }\n\n  /**\n   * Update the selection state based on currently selected choices\n   */\n  updateSelectionState() {\n    const allChoice = this.choices.find(c => c.allChoice) || {\n      value: '*',\n      display: html`<b>${msg('Select All')}</b>`,\n      checked: true,\n      allChoice: true,\n    };\n    if (this.selectedChoices.size === 0) {\n      this.selectionState = SelectionState.NONE;\n    } else if (\n      this.selectedChoices.size === 1 &&\n      this.selectedChoices.has(allChoice.value)\n    ) {\n      this.selectionState = SelectionState.ALL;\n    } else {\n      this.selectionState = SelectionState.SOME;\n    }\n  }\n\n  getCheckboxImg() {\n    const allChoice = this.choices.find(c => c.allChoice) || {\n      value: '*',\n      display: html`<b>${msg('Select All')}</b>`,\n      checked: true,\n      allChoice: true,\n    };\n\n    if (this.selectedChoices.size === 0) {\n      return html`<img src=${allCheckboxUncheckedSvg} alt=\"empty checkbox\" />`;\n    }\n    if (\n      this.selectedChoices.size === 1 &&\n      this.selectedChoices.has(allChoice.value)\n    ) {\n      return html`<img src=${allCheckboxCheckedSvg} alt=\"checked checkbox\" />`;\n    }\n    return html`<img src=${allCheckboxDashSvg} alt=\"dash checkbox\" />`;\n  }\n\n  /**\n   * Hook into willUpdate to ensure the selected choices set matches choices\n   * @param _changedProperties Map of changed properties for this update\n   */\n  protected willUpdate(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    if (_changedProperties.has('choices')) {\n      const allChoice = this.choices.find(c => c.allChoice);\n      if (allChoice && allChoice.checked) {\n        // Add only the al lvalue if all selected initially\n        this.selectedChoices.add(allChoice.value);\n      } else {\n        // Otherwise, add all selected values based on initial input\n        this.choices.forEach(c => {\n          if (c.checked && !c.allChoice) {\n            this.selectedChoices.add(c.value);\n          }\n        });\n      }\n    }\n\n    // Ensure all checkboxes have the proper appearance intially\n    this.updateSelectionState();\n  }\n\n  render() {\n    const allChoice = this.choices.find(c => c.allChoice) || {\n      value: '*',\n      display: html`<b>${msg('Select All')}</b>`,\n      checked: true,\n      allChoice: true,\n    };\n\n    return html`\n      <!-- Render each choice -->\n      <div class=\"choices-list\">\n        <!-- All choice -->\n        <div class=\"all-ctr\">\n          <input\n            id=\"all-checkbox\"\n            type=\"checkbox\"\n            @click=${this.handleChoiceClick}\n            ?checked=${this.selectedChoices.has(allChoice.value)}\n          />\n          <label for=\"all-checkbox\"> ${this.getCheckboxImg()} </label>\n          <span class=\"all-prefix\">${allChoice.display}</span>\n        </div>\n\n        ${when(\n          this.open,\n          () => html`\n            ${this.choices\n              .filter(c => !c.allChoice)\n              .map(\n                c => html`\n                  <div class=\"choice-ctr\">\n                    <input\n                      id=${c.value}\n                      class=\"choice-checkbox\"\n                      type=\"checkbox\"\n                      ?checked=${this.selectedChoices.has(c.value) ||\n                      this.selectedChoices.has(allChoice.value)}\n                      @change=${this.handleChoiceClick}\n                    />\n                    <label>${c.display}</label>\n                  </div>\n                `\n              )}\n\n            <!-- Optional other choice -->\n            ${when(\n              this.includeOther,\n              () => html`\n            <div id=\"other-data-ctr\">\n              <div class=\"choice-ctr\">\n                <input\n                  id='other-checkbox'\n                  type=\"checkbox\"\n                  @change=${this.handleOtherClick}\n                />\n                <label>${msg(\n                  html`<b>OTHER-DATA:</b> Specify another type of data`\n                )}</label>\n              </div>\n              <div id=\"other-data-input-ctr\">\n                <span>${msg('Other data type:')}</span>\n                <input id=\"other-data-input\" type=\"text\"></input>\n              </div>\n            </div>\n          `\n            )}\n          `\n        )}\n      </div>\n\n      <!-- Expand/collapse button -->\n      <button\n        @click=${() => {\n          this.open = !this.open;\n        }}\n      >\n        ${when(\n          this.open,\n          () => html`<img src=${closeContainerArrowSvg} alt=\"close arrow\" />`,\n          () => html`<img src=${expandListSvg} alt=\"expand list\" />`\n        )}\n      </button>\n    `;\n  }\n\n  static styles = [\n    css`\n      :host {\n        display: block;\n        text-align: center;\n      }\n\n      :host([selection-state='0']) .choice-checkbox {\n        opacity: 0.5;\n      }\n\n      :host([selection-state='0']) #all-checkbox:checked + label {\n        opacity: 1;\n      }\n\n      :host([selection-state='1']) #all-checkbox + label {\n        opacity: 1;\n      }\n\n      :host([selection-state='2']) .choice-checkbox {\n        opacity: 1;\n      }\n\n      .choices-list {\n        display: grid;\n        overflow: hidden;\n        grid-template-columns: 1fr;\n        row-gap: 1.5em;\n        padding: 0em 0em 1em 0em;\n      }\n\n      .choice-ctr {\n        text-align: left;\n      }\n\n      .all-ctr {\n        display: flex;\n        align-items: center;\n      }\n\n      .all-prefix {\n        padding: 0px 0px 0px 4px;\n      }\n\n      #all-checkbox {\n        display: none;\n      }\n\n      #all-checkbox + label {\n        height: 13px;\n        width: 13px;\n        display: inline-block;\n        margin: 3px 3px 3px 4px;\n      }\n\n      #other-data-input-ctr {\n        display: flex;\n        column-gap: 5px;\n        padding: 20px 55px;\n        align-items: center;\n      }\n\n      #other-data-input input {\n        height: 30px;\n        width: 100%;\n        background: #f8f8fc;\n        border: 1px solid #e5e5e5;\n        border-radius: 4px;\n      }\n\n      #other-data-input span {\n        flex-shrink: 0;\n      }\n\n      button {\n        background: none;\n        border: none;\n      }\n    `,\n  ];\n}\n"],"names":[],"mappings":"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"}