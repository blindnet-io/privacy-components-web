{"version":3,"file":"StatusView.js","sources":["../src/StatusView.ts"],"sourcesContent":["import { msg, str } from '@lit/localize';\nimport { css, html, LitElement, PropertyValueMap } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { when } from 'lit/directives/when.js';\nimport {\n  ACTION,\n  DEMAND_STATUS,\n  PrivacyResponseItem,\n  ComputationAPI,\n} from '@blindnet/core';\n\nimport './StatusViewItem.js';\nimport { ComponentState } from './utils/states.js';\nimport { PRCIStyles } from './styles.js';\nimport { getRequestLink, removeQueryParam } from './utils/utils.js';\n\nconst linkSvg = new URL('./assets/icons/link.svg', import.meta.url).href;\n\n/**\n * View the status of a Privacy Request\n */\n@customElement('status-view')\nexport class StatusView extends LitElement {\n  static styles = [\n    PRCIStyles,\n    css`\n      :host {\n        display: grid;\n        row-gap: 20px;\n        max-width: 900px;\n        text-align: center;\n        margin: auto;\n      }\n\n      .req-progress-ctr {\n        display: grid;\n        row-gap: 10px;\n      }\n\n      .dmds-ctr {\n        display: grid;\n        row-gap: 20px;\n        padding: 30px 40px 40px 40px;\n      }\n\n      .dmds-ctr span {\n        padding: 0px 0px 20px 0px;\n      }\n\n      #completed-dmds-ctr {\n        border: 1px solid #18a0fb;\n        background: rgba(24, 160, 251, 0.11);\n      }\n\n      #nav-btns-ctr {\n        display: flex;\n        /* grid-template-columns: repeat(2, 1fr); */\n        column-gap: 20px;\n        justify-content: center;\n        justify-items: center;\n      }\n\n      .status-nav-btn {\n        font-size: 18px;\n      }\n\n      p {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      button {\n        display: inline-flex;\n        align-items: center;\n      }\n    `,\n  ];\n\n  @property({ type: String, attribute: 'request-id' }) requestId: string = '';\n\n  @property({ type: Boolean }) newRequest: boolean = false;\n\n  @state() _requestDate: Date = new Date();\n\n  @state() _completedDemands: PrivacyResponseItem[] = [];\n\n  @state() _processingDemands: PrivacyResponseItem[] = [];\n\n  @state() _cancelledDemands: PrivacyResponseItem[] = [];\n\n  // eslint-disable-next-line no-undef\n  @state() _intervalId: any = undefined;\n\n  reloadRequest() {\n    // Get the status of the current request once there is an API token set\n    if (ComputationAPI.getInstance().hasApiToken()) {\n      ComputationAPI.getInstance()\n        .getRequest(this.requestId)\n        .then(response => {\n          if (response.length > 0) {\n            this._requestDate = new Date(response[0].date);\n            this._completedDemands = response.filter(d =>\n              [\n                DEMAND_STATUS.GRANTED,\n                DEMAND_STATUS['PARTIALLY-GRANTED'],\n                DEMAND_STATUS.DENIED,\n              ].includes(d.status)\n            );\n            this._processingDemands = response.filter(\n              d => d.status === DEMAND_STATUS['UNDER-REVIEW']\n            );\n            this._cancelledDemands = response.filter(\n              d => d.status === DEMAND_STATUS.CANCELED\n            );\n          }\n\n          // If no more demands are processing, the reload interval exists, and the data for\n          // all ACCESS responses has arrived, stop reloading the request.\n          if (\n            this._processingDemands.length === 0 &&\n            this._intervalId &&\n            !this._completedDemands.some(\n              d => d.requested_action === ACTION.ACCESS && !d.data\n            )\n          ) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n          } else if (\n            !this._intervalId &&\n            this._processingDemands.length !== 0\n          ) {\n            // FIXME: reload should happen after a user interaction, not automatically\n            // Setup an interval to get the status of processing demands every 3 seconds\n            this._intervalId = setInterval(() => this.reloadRequest(), 3000);\n          }\n        });\n    } else {\n      this._intervalId = setInterval(() => this.reloadRequest(), 3000);\n    }\n  }\n\n  protected willUpdate(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    if (_changedProperties.has('requestId') && this.requestId !== '') {\n      this.reloadRequest();\n    }\n  }\n\n  handleCopyIdClick() {\n    navigator.clipboard.writeText(this.requestId);\n  }\n\n  handleCopyLinkClick() {\n    navigator.clipboard.writeText(getRequestLink(this.requestId).toString());\n  }\n\n  handleBackClick() {\n    removeQueryParam('requestId');\n    this.dispatchEvent(\n      new CustomEvent('component-state-change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          newState: ComponentState.REQUESTS,\n        },\n      })\n    );\n  }\n\n  handleNewRequestClick() {\n    removeQueryParam('requestId');\n    this.dispatchEvent(\n      new CustomEvent('component-state-change', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          newState: ComponentState.MENU,\n        },\n      })\n    );\n  }\n\n  /**\n   * Stop fetching this request when leaving status view\n   */\n  disconnectedCallback(): void {\n    if (this._intervalId) {\n      clearInterval(this._intervalId);\n    }\n  }\n\n  render() {\n    return html`\n      ${when(\n        this._processingDemands.length > 0,\n        () => html`\n          <p>\n            ${msg(\n              str`Your Privacy Request, sent on\n              ${this._requestDate.toLocaleDateString('en-gb')}, is currently\n              being processed.`\n            )}\n          </p>\n          ${when(\n            this._completedDemands.length > 0,\n            () => html`\n              <div class=\"req-progress-ctr\">\n                <p>${msg('At the moment:')}</p>\n                <p>\n                  <b\n                    >${msg(\n                      html`${this._completedDemands.length} demand(s) have been\n                      completed${when(\n                        this._cancelledDemands.length > 0,\n                        () =>\n                          html` and ${this._cancelledDemands.length} demand(s)\n                          have been cancelled`\n                      )}`\n                    )}</b\n                  >\n                </p>\n                <p>\n                  ${msg(\n                    html`${this._processingDemands.length} demand(s) are being\n                    processed`\n                  )}\n                </p>\n              </div>\n            `\n          )}\n        `,\n        () => html`\n          <p>\n            ${msg(\n              html`Your Privacy Request, sent on\n              ${this._requestDate.toLocaleDateString('en-gb')}, has been\n              processed.`\n            )}\n          </p>\n        `\n      )}\n      <div>\n        <button class='svg-btn' @click=${this.handleCopyLinkClick}>\n          <img src=${linkSvg} alt='Copy status page link'></img>&nbsp;\n          <span class='text--underline'>${msg('Copy link to this page')}</span>\n        </button>\n      </div>\n      ${when(\n        this._completedDemands.length > 0,\n        () => html`\n          <div\n            id=\"completed-dmds-ctr\"\n            class=\"dmds-ctr border--medium border--rounded\"\n          >\n            <span><b>${msg('Completed Demand(s)')}</b></span>\n            ${map(\n              this._completedDemands,\n              d => html`<status-view-item .demand=${d}></status-view-item>`\n            )}\n          </div>\n        `\n      )}\n      ${when(\n        this._processingDemands.length > 0,\n        () => html`\n          <div\n            id=\"processing-dmds-ctr\"\n            class=\"dmds-ctr border--medium border--rounded\"\n          >\n            <span><b>${msg('Processing Demand(s)')}</b></span>\n            ${map(\n              this._processingDemands,\n              d => html`<status-view-item .demand=${d}></status-view-item>`\n            )}\n          </div>\n        `\n      )}\n      ${when(\n        this._cancelledDemands.length > 0,\n        () => html`\n          <div\n            id=\"cancelled-dmds-ctr\"\n            class=\"dmds-ctr border--medium border--rounded\"\n          >\n            <span><b>${msg('Cancelled Demand(s)')}</b></span>\n            ${map(\n              this._cancelledDemands,\n              d => html`<status-view-item .demand=${d}></status-view-item>`\n            )}\n          </div>\n        `\n      )}\n      <div id=\"nav-btns-ctr\">\n        <button\n          class=\"status-nav-btn link-btn dark-font text--underline\"\n          @click=${this.handleBackClick}\n        >\n          ${msg('Back to my Requests')}\n        </button>\n        <button\n          class=\"status-nav-btn link-btn dark-font text--underline\"\n          @click=${this.handleNewRequestClick}\n        >\n          ${msg('Submit a new Privacy Request')}\n        </button>\n      </div>\n    `;\n  }\n}\n"],"names":[],"mappings":"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"}