import{s as e,r as t,$ as n}from"./a4033112.js";import{n as o}from"./44912706.js";import{l as i}from"./c02d4223.js";import{A as r}from"./e6e0e6e2.js";import"./6d7ab533.js";function a(e){this.message=e}a.prototype=new Error,a.prototype.name="InvalidCharacterError";var s="undefined"!=typeof window&&window.atob&&window.atob.bind(window)||function(e){var t=String(e).replace(/=+$/,"");if(t.length%4==1)throw new a("'atob' failed: The string to be decoded is not correctly encoded.");for(var n,o,i=0,r=0,s="";o=t.charAt(r++);~o&&(n=i%4?64*n+o:o,i++%4)?s+=String.fromCharCode(255&n>>(-2*i&6)):0)o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(o);return s};function d(e){var t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw"Illegal base64url string!"}try{return function(e){return decodeURIComponent(s(e).replace(/(.)/g,(function(e,t){var n=t.charCodeAt(0).toString(16).toUpperCase();return n.length<2&&(n="0"+n),"%"+n})))}(t)}catch(e){return s(t)}}function c(e){this.message=e}c.prototype=new Error,c.prototype.name="InvalidTokenError";const l=new r({domain:"blindnet.eu.auth0.com",client_id:"1C0uhFCpzvJAkFi4uqoq2oAWSgQicqHc",redirect_uri:`${window.location.origin}/demos/devkit-simple-tutorial/privacy`,authorizationParams:{redirect_uri:`${window.location.origin}/demos/devkit-simple-tutorial/privacy`}});class p extends e{static get properties(){return{_apiToken:{state:!0}}}static get styles(){return t`bldn-priv-request{margin-bottom:30px}`}async getBlindnetToken(e){return fetch("https://blindnet-connector-demo-staging.azurewebsites.net/auth/token",{method:"GET",headers:{Authorization:`Bearer ${e}`}})}handleLoginClick(){window.location.href=`${window.location.origin}/demos/devkit-simple-tutorial/login`}handleLogoutClick(){l.logout()}render(){return void 0===this._apiToken&&l.getTokenSilently().then((e=>{this.getBlindnetToken(e).then((e=>{e.json().then((e=>{this._apiToken=e}))})).catch((e=>{console.log(e)}))})).catch((()=>{})),n` <bldn-priv-request data-categories='["contact", "name", "uid", "other-data"]' api-token="${i(this._apiToken)}"></bldn-priv-request> ${o(this._apiToken,(()=>n` <span>Logged in as ${function(e,t){if("string"!=typeof e)throw new c("Invalid token specified");var n=!0===(t=t||{}).header?0:1;try{return JSON.parse(d(e.split(".")[n]))}catch(e){throw new c("Invalid token specified: "+e.message)}}(this._apiToken).uid}.</span> <bldn-button @click="${this.handleLogoutClick}" mode="link"> Logout </bldn-button> `),(()=>n` <bldn-button @click="${this.handleLoginClick}" mode="link"> Login </bldn-button> `))} `}}customElements.define("app-privacy",p);export{p as AppPrivacy};
