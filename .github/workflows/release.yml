name: Release
on:
  push:
    branches:
      - main
      - develop
permissions:
  contents: write
jobs:
  release:
    concurrency: ci-${{ github.ref }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
        with:
          # Checkout all branches and tags
          fetch-depth: 0
          # use a dedicated access token to allow bypassing branches restrictions when pushing
          token: ${{ secrets.BOT_PAT }}

      - name: Install dependencies 🔧
        run: |
          yarn install --frozen-lockfile
          yarn lerna bootstrap

      - name: Build 👷‍♀
        run: |
          yarn bundle

      - name: Check ✅
        run: |
          yarn lint
          yarn typecheck
          yarn test

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        # only update the documentation for stable releases
        if: github.ref == 'refs/heads/main'
        with:
          folder: build

      - name: Configure git and npm ⚙️
        env:
          # automation token
          # see https://github.com/lerna/lerna/issues/2788#issuecomment-1192788964
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        run: |
          git config --global user.name "blindnet bot"
          git config --global user.email "dev@blindnet.io"
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > .npmrc

      - name: Version and publish (main) 📦
        if: github.ref == 'refs/heads/main'
        run: |
          yarn lerna version --conventional-graduate --force-publish --yes
          yarn lerna publish from-git --yes

      - name: Publish (beta) 📦
        if: github.ref == 'refs/heads/develop'
        run: |
          yarn lerna publish --loglevel silly \
           --canary --yes --no-git-tag-version --no-push \
           --dist-tag next --preid beta-$(git rev-parse --short HEAD)
